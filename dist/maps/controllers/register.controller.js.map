{"version":3,"sources":["controllers/register.controller.js"],"names":["app","controller","$scope","$state","$rootScope","$toast","$stateParams","filledLoggedInGoogleData","googleLogin","loggedIn","console","log","passwordChecked","googleLoginFinished","user","firebase","auth","currentUser","name","displayName","uid","photoURL","email","password","passwordRepeat","userType","parent","babySitter","$watch","authData","providerData","providerId","birthDay","minAge","moment","duration","maxDate","subtract","toDate","reDoLoginInfo","checkPassword","signUpWithEmail","withEmail","chosen","check","requiredFields","register","registerInDatabase","checkboxError","createUserWithEmailAndPassword","then","data","signInWithEmailAndPassword","catch","error","code","message","resetEmailChoice","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","credential","accessToken","$apply","group","updateUserData","getTime","pricing","defaultAgeGroups","locationCity","database","child","transaction","result","update","go","groupEnd"],"mappings":"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","file":"controllers/register.controller.js","sourcesContent":["app.controller('registerCtrl', ['$scope', '$state', '$rootScope', '$toast', '$stateParams', function($scope, $state, $rootScope, $toast, $stateParams){\n\t\t$scope.user = {\n\t\t\tphotoURL: '../../images/defaultProfile.png',\n\t\t\tpassword: null,\n\t\t\tpasswordRepeat: null\n\t\t};\n\t\t$scope.user.userType = {\n\t\t\tparent: false,\n\t\t\tbabySitter: false\n\t\t};\n\t\t//fb = firebase.auth().currentUser.providerData[0].providerId;\n\t\t$rootScope.$watch('loggedIn', function(){\n\t\t\tif($rootScope.loggedIn){\n\t\t\t\tif($rootScope.authData.providerData[0].providerId == 'google.com'){\n\t\t\t\t\tfilledLoggedInGoogleData();\n\t\t\t\t}\t\n\t\t\t}\n\t\t})\n\n\t\tfunction filledLoggedInGoogleData(){\n\t\t\tif($stateParams.googleLogin || $rootScope.loggedIn === true){\n\t\t\t\tconsole.log(\"running logged in code\");\n\t\t\t\t$scope.passwordChecked = true;\n\t\t\t\t$scope.googleLoginFinished = true;\n\t\t\t\tvar user = firebase.auth().currentUser;\n\t\t\t\t$scope.user.name = user.displayName;\n\t\t\t\t$scope.user.uid = user.uid;\n\t\t\t\t$scope.user.photoURL = user.photoURL;\n\t\t\t\t$scope.user.email = user.email;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t$scope.birthDay = null;\n\t\t// Users must be at least 18 year old\n\t\tvar minAge = moment.duration(18, 'years');\n\t\t// Today minus 18 years\n\t\t$scope.maxDate = moment().subtract(minAge).toDate();\n\t\t// $scope.maxDate = new Date(1009839600000);\n\t\t$scope.passwordChecked = false;\n\t\t\n\t\t$scope.reDoLoginInfo = function(){\n\t\t\t$scope.passwordChecked = false;\n\t\t\t$scope.user.password = \"\";\n\t\t\t$scope.user.passwordRepeat = \"\";\n\t\t}\n\n\t\t$scope.checkPassword = function(){\n\t\t\tif($scope.user.password === $scope.user.passwordRepeat){\n\t\t\t\t$scope.passwordChecked = true;\n\t\t\t}else{\n\t\t\t\t$scope.passwordChecked = false;\n\t\t\t}\n\t\t}\n\n\t\t$scope.signUpWithEmail = function(){\n\t\t\t$scope.withEmail = true;\n\t\t\t$scope.chosen = true;\n\t\t}\n\n\t\t$scope.check = function(){\n\t\t\t\n\t\t}\t\t\n\t\t// Number of required fields\n\t\t$scope.requiredFields = 7;\n\n\t\t/*\t\n\t\t\tRegistering a user function\n\t\t\t@params googleLogin - boolean - specifies if its a google login or not\n\t\t*/\n\t\t$scope.register = function(){\n\t\t\tif($scope.googleLoginFinished){\n\t\t\t\t$scope.registerInDatabase($scope.user.uid);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif($scope.user.userType.parent === false && $scope.user.userType.babySitter === false){\n\t\t\t\t$scope.checkboxError = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif($scope.user.password !== $scope.user.passwordRepeat){\n\t\t\t   $toast(\"Passwords don't match\");\n\t\t\t  \treturn;\n\t\t\t}\n\t\t\t// Register -> Programmatically login -> set data in database by calling the function\n\n\t\t\tfirebase.auth().createUserWithEmailAndPassword($scope.user.email, $scope.user.password)\n\t\t\t.then(function(data){\n\t\t\t\tconsole.log(data)\n\t\t\t\tfirebase.auth().signInWithEmailAndPassword($scope.user.email, $scope.user.password)\n\t\t\t\t.then(function(data){\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t$scope.registerInDatabase(data.uid);\n\t\t\t\t})\n\t\t\t\t.catch(function(error) {\n\t\t\t\t  console.log(error)\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t  // Handle Errors here.\n\t\t\t  console.log(error);\n\t\t\t  var errorCode = error.code;\n\t\t\t  var errorMessage = error.message;\n\t\t\t   if(error.code == 'auth/email-already-in-use'){\n\t\t\t   \t $toast('Email Already In Use.');\n\t\t\t   }else{\n\t\t\t   \t $toast('Registration Failed.');\n\t\t\t   }\n\t\t\t});\t\n\t\t}\n\t\t$scope.resetEmailChoice = function(){\n\t\t\t$scope.withEmail = false; \n\t\t\t$scope.chosen = false\n\t\t}\n\n\t\t$scope.signInWithGoogle = function(){\n\t\t/*$scope.googleLoginFinished = true;\n\t\t$scope.passwordChecked = true;\n\t\t$scope.user.email = \"Abdallaroc@gmail.com\";\n\t\treturn;*/\n\n\t\tvar provider = new firebase.auth.GoogleAuthProvider();\n\n\t\tfirebase.auth().signInWithPopup(provider)\n\t\t\t.then(function(data) {\n\t\t\t  console.log(data);\n\t\t\t  // This gives you a Google Access Token. You can use it to access the Google API.\n\t\t\t  var token = data.credential.accessToken;\n\t\t\t  // The signed-in user info.\n\t\t\t  var user = data.user;\n\t\t\t  $scope.$apply(function(){\n\t\t\t  \t$scope.passwordChecked = true;\n\t\t\t  \t$scope.googleLoginFinished = true;\n\t\t\t  \t//To do, store the user name\n\t\t\t  \t$scope.user.name = data.user.displayName;\n\t\t\t  \t$scope.user.uid = data.user.uid;\n\t\t\t  \t$scope.user.photoURL = data.user.photoURL;\n\t\t\t  \t$scope.user.email = data.user.email;\n\t\t\t  })\n\t\t\t  \n\t\t\t  //$scope.registerInDatabase(result.user.uid);\n\t\t\t  // ...\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t  \t$toast('Registration with Google failed');\n\t\t\t  \tconsole.log(error);\n\t\t\t});\n\t\t}\n\n\n\t\t/*\n\t\t\tTo register the user information in the database, this function is called by both normal the registration and the google registeration\n\t\t\t@params uid - string - the uid of the user, given in the callback by either signInWithPopup or signInWithEmailAndPassword firebase authentication methods\n\t\t*/\n\t\t$scope.registerInDatabase = function(uid){\n\t\t\tconsole.group('Registering in database');\n\t\t\tvar updateUserData = {};\n\t\t\t$scope.user.birthDay = $scope.birthDay.getTime();\n\t\t\tconsole.log($scope.user);\n\t\t\tdelete $scope.user['password']; \n\t\t\tdelete $scope.user['passwordRepeat'];\n\n\t\t\tif($scope.user.userType.babySitter === true){\n\t\t\t\tconsole.log(\"user is a babysitter\")\n\t\t\t\tupdateUserData['babysitters/' + uid] = {\n\t\t\t\t\tpricing: $rootScope.defaultAgeGroups,\n\t\t\t\t\tphotoURL: $scope.user.photoURL,\n\t\t\t\t\tlocationCity: $scope.user.locationCity,\n\t\t\t\t\tbirthDay: $scope.user.birthDay,\n\t\t\t\t\temail : $scope.user.email,\n\t\t\t\t\tname: $scope.user.name\n\t\t\t\t};\t\n\t\t\t\t$scope.user.pricing = $rootScope.defaultAgeGroups;\n\t\t\t\tconsole.log(\"starting counter code\");\n\t\t\t\t$scope.database.child('babysitters/counter').transaction(function(data){\n\t\t\t\t\tconsole.log(data)\n\t\t\t\t\treturn data + 1;\n\t\t\t\t})\n\t\t\t\t.then(function(result){\n\t\t\t\t\tconsole.log(result);\n\t\t\t\t});\n\t\t\t\tconsole.log(\"counter code end\");\n\t\t\t}\n\t\t\tconsole.log(updateUserData);\n\t\t\tupdateUserData['users/' + uid] = $scope.user;\t\t\t\n\n\t\t\tconsole.log(\"update user data is\" + updateUserData);\n\t\t\t$scope.database.update(updateUserData)\n\t\t\t\t.then(function(data){\n\t\t\t\t\tconsole.log('database filled');\n\t\t\t\t\t$toast('Registration successful');\n\t\t\t\t\tif($scope.user.userType.babySitter && $scope.user.userType.parent){\n\t\t\t\t\t\t$state.go('accountPage');\n\t\t\t\t\t}\n\t\t\t\t\tif($scope.user.userType.babySitter){\n\t\t\t\t\t\t$state.go('accountPage');\n\t\t\t\t\t}\n\t\t\t\t\tif($scope.user.userType.parent){\n\t\t\t\t\t\t$state.go('booking');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(function(data){\n\t\t\t\t\tconsole.error(data);\n\t\t\t\t\t$toast('Registration failed!');\n\t\t\t\t});\n\t\t\t\tconsole.groupEnd();\n\t\t}\n}]);"],"sourceRoot":"/source/"}