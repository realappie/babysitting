{"version":3,"sources":["script.js","controllers/account.controller.js","controllers/babysitters.controller.js","controllers/booking.controller.js","controllers/bookingDetails.controller.js","controllers/children.controller.js","controllers/find.controller.js","controllers/main.controller.js","controllers/register.controller.js"],"names":["app","angular","module","factory","text","document","getElementById","className","querySelector","innerHTML","setTimeout","config","$stateProvider","$urlRouterProvider","$mdThemingProvider","$httpProvider","theme","primaryPalette","accentPalette","host","window","location","hostname","interceptors","push","request","method","api","url","otherwise","state","templateUrl","data","pageTitle","guests","icon","controller","hidden","guest","parent","replace","params","googleLogin","run","$rootScope","$state","$stateParams","$firebaseObject","$toast","$firebaseAuth","states","get","shift","availableStates","currentUserLoaded","loggedIn","authStateLoaded","authData","incompleteData","apiKey","authDomain","databaseURL","storageBucket","firebase","initializeApp","authObj","$onAuthStateChanged","user","JSON","parse","stringify","console","log","go","defaultAgeGroups","codename","description","rate","days","defaultWorkHours","i","name","startTime","endTime","database","ref","$on","event","toState","toParams","fromState","fromParams","options","navOpen","slideAway","uid","preventDefault","$watch","filter","fetchUserData","auth","currentUser","child","$loaded","then","$value","$scope","$firebaseArray","children","zeroChildren","childrenLoaded","bookingsLoaded","pages","babysitter","personal","invalidPricingForm","pricingLoaded","pricingForm","ageGroups","workHours","bookings","emptyBookings","times","time","ms","format","moment","startOf","add","tab","parentTab","$id","locationCity","zipCode","street","userTypes","model","copy","userType","babySitter","updatePricing","length","undefined","catch","err","error","once","val","$apply","deleteChild","index","indexOf","$remove","updateProfile","updateProfileData","update","updateUserType","type","userPath","updateParentData","updateBabySitterData","pricing","photoURL","birthDay","email","saveHours","updateHoursData","workHoursToSave","map","obj","savePricing","updatePricingData","ageGroupsToSave","checkForms","$invalid","showBookingInformation","bookingID","id","$mdDialog","$anchorScroll","amount","babysittersLoaded","noBabysitters","max","scrollDown","babysittersRef","limitToFirst","babysitters","scrollTo","body","scrollHeight","loadMore","Object","keys","href","moreInfo","key","show","contentElement","element","targetEvent","clickOutsideToClose","bindToController","fullscreen","calculateAge","birthday","Math","abs","Date","now","getUTCFullYear","closeDialog","hide","$http","today","todayIndex","day","currentWeek","weekIndex","weekStat","startOfWeek","endOfWeek","endOf","dayObjects","weekIsFree","selectedDay","duration","cost","selectedChildren","fetchBookings","bookingsPath","valueOf","updateDate","date","weekNumber","dayOfMonth","month","dayOfWeek","createDays","nextWeek","maxHistory","previousWeek","currentTime","difference","subtract","clear","updateAges","age","fromNow","book","createTimes","msDay","calcDuration","momentDuration","hours","minutes","calcCost","diff","confirmBooking","zipcode","bookingLoaded","companyEmail","bookingDetails","booking","report","cancelBooking","ev","confirm","title","textContent","ariaLabel","ok","cancel","parentID","babysitterID","$timeout","emptyChildren","maxChildren","remoteChildrenLoaded","remoteChildren","editMode","edit","maxAge","minDate","toDate","maxDate","info","toPushChild","e","$watchCollection","addChildForm","removeChild","splice","saveChild","getTime","addChild","$event","group","$add","matches","hideForm","phonenumber","reset","find","searching","res","alert","navTapped","toggleNav","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","forgotPassword","requestResetLink","sendPasswordResetEmail","login","signInWithEmailAndPassword","password","code","logout","signOut","reload","passwordRepeat","providerData","providerId","filledLoggedInGoogleData","passwordChecked","googleLoginFinished","displayName","minAge","reDoLoginInfo","checkPassword","signUpWithEmail","withEmail","chosen","check","checkCheckbox","userChosen","register","registerInDatabase","createUserWithEmailAndPassword","message","resetEmailChoice","credential","accessToken","updateUserData","groupEnd"],"mappings":"AAKAA,IAAAC,QAAAC,OAAA,eAAA,YAAA,YAAA,aAAA,WAAA,aAAA,oBAGAF,IAAAG,QAAA,SAAA,WACA,MAAA,UAAAC,GACAC,SAAAC,eAAA,SAAAC,WAAA,UACAF,SAAAG,cAAA,eAAAC,UAAAL,EACAM,WACA,WACAL,SAAAC,eAAA,SAAAC,UAAA,IACA,QAGAP,IAAAW,QAAA,iBAAA,qBAAA,qBAAA,gBACA,SAAAC,EAAAC,EAAAC,EAAAC,GAGAD,EAAAE,MAAA,WACAC,eAAA,UACAC,cAAA,SACA,IAAAC,EAEAA,GADA,qCAAAC,OAAAC,SAAAC,SACA,oCACA,wBAEAP,EAAAQ,aAAAC,KAAA,WACA,OACAC,QAAA,SAAAd,GAIA,MAHA,QAAAA,EAAAe,QAAAf,EAAAgB,MACAhB,EAAAiB,IAAAT,EAAAR,EAAAiB,KAEAjB,MAMAE,EAAAgB,UAAA,gBAEAjB,EACAkB,MAAA,SACAF,IAAA,SACAG,YAAA,mBACAC,MACAC,UAAA,QACAC,QAAA,EACAC,KAAA,WAEAC,WAAA,aAEAN,MAAA,WACAF,IAAA,iBACAG,YAAA,qBACAC,MACAC,UAAA,UACAC,QAAA,EACAG,QAAA,EACAF,KAAA,cAEAC,WAAA,gBAEAN,MAAA,eACAF,IAAA,eACAG,YAAA,yBACAC,MACAC,UAAA,cACAK,OAAA,EACAH,KAAA,SACAI,QAAA,GAEAH,WAAA,oBAEAN,MAAA,QACAF,IAAA,QACAG,YAAA,kBACAC,MACAC,UAAA,OACAK,OAAA,EACAH,KAAA,SACAI,QAAA,GAEAH,WAAA,aAEAN,MAAA,YAEAF,IAAA,YACAG,YAAA,sBACAS,SAAA,EACAR,MACAC,UAAA,WACAC,QAAA,EACAC,KAAA,UAEAM,QACAC,YAAA,MAEAN,WAAA,iBAEAN,MAAA,eACAF,IAAA,iBACAG,YAAA,qBACAC,MACAC,UAAA,aACAC,QAAA,EACAC,KAAA,iBAEAC,WAAA,gBAEAN,MAAA,YACAF,IAAA,mBACAG,YAAA,sBACAC,MACAC,UAAA,cACAI,QAAA,EACAH,QAAA,GAEAE,WAAA,iBAEAN,MAAA,kBACAF,IAAA,qBACAG,YAAA,4BACAC,MACAC,UAAA,sBACAI,QAAA,EACAH,QAAA,GAEAE,WAAA,mBAEAN,MAAA,SACAF,IAAA,SACAG,YAAA,mBACAC,MACAC,UAAA,QACAC,QAAA,EACAC,KAAA,qBAQAnC,IAAA2C,KAAA,aAAA,SAAA,eAAA,kBAAA,SAAA,gBACA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAL,EAAAC,OAAAA,EACAD,EAAAM,OAAAL,EAAAM,MACAP,EAAAM,OAAAE,QACAR,EAAAS,gBAAAT,EAAAM,OACAN,EAAAU,mBAAA,EACAV,EAAAW,UAAA,EACAX,EAAAY,iBAAA,EACAZ,EAAAa,YACAb,EAAAc,gBAAA,CAEA,IAAA/C,IACAgD,OAAA,0CACAC,WAAA,oCACAC,YAAA,2CACAC,cAAA,gCAEAC,UAAAC,cAAArD,GAEAiC,EAAAqB,QAAAhB,IAEAL,EAAAqB,QAAAC,oBAAA,SAAAC,GACAvB,EAAAY,iBAAA,EACAW,GACAvB,EAAAW,UAAA,EACAX,EAAAa,SAAAW,KAAAC,MAAAD,KAAAE,UAAAH,IACAI,QAAAC,IAAA,gBACAD,QAAAC,IAAA5B,EAAAa,YAGAb,EAAAW,UAAA,EACAV,EAAA4B,GAAA,YASA7B,EAAA8B,mBACAC,SAAA,IACAC,YAAA,kBACAC,KAAA,IAEAF,SAAA,IACAC,YAAA,kBACAC,KAAA,IAEAF,SAAA,IACAC,YAAA,kBACAC,KAAA,IAEAF,SAAA,IACAC,YAAA,mBACAC,KAAA,IAEAF,SAAA,IACAC,YAAA,oBACAC,KAAA,IAGAjC,EAAAkC,MAAA,SAAA,SAAA,UAAA,YAAA,WAAA,SAAA,YAEAlC,EAAAmC,mBACA,KAAA,GAAAC,GAAA,EAAAA,EAAA,EAAAA,IAEApC,EAAAmC,iBAAAvD,MACAyD,KAAArC,EAAAkC,KAAAE,GACAE,UAAA,MACAC,QAAA,MAKAvC,GAAAwC,SAAArB,SAAAqB,WAAAC,MACAjE,OAAA,SAAAwB,EAAAwC,SACAxC,EAAA0C,IAAA,oBAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAhD,EAAAiD,SACAjD,EAAAkD,YAEA,WAAAN,EAAAP,MAAAQ,EAAAM,MACAR,EAAAS,iBACAhD,EAAA,oCACAH,EAAA4B,GAAA,gBAEA,SAAAe,EAAAP,MAAArC,EAAAW,WAAAkC,EAAA/C,cACA6C,EAAAS,iBACAnD,EAAA4B,GAAA,gBAEA7B,EAAAY,kBACAgC,EAAAxD,KAAAE,QAAAU,EAAAW,WACAgC,EAAAS,iBACAnD,EAAA4B,GAAA,SACAzB,EAAA,wBAGAuB,QAAAC,IAAA,6BAAA5B,EAAAc,gBACAd,EAAAc,iBAAA8B,EAAAxD,KAAAE,QAAA,aAAAsD,IACAD,EAAAS,iBACAhD,EAAA,kCAQAJ,EAAAqD,OAAA,WAAA,WAEArD,EAAAW,UACAX,EAAAS,gBAAAT,EAAAM,OAAAgD,OAAA,SAAApE,GACA,OAAAA,EAAAE,KAAAE,SAAAJ,EAAAE,KAAAK,SAEAO,EAAAuD,cAAApC,SAAAqC,OAAAC,YAAAN,MAEAnD,EAAAS,gBAAAT,EAAAM,OAAAgD,OAAA,SAAApE,GACA,MAAAA,GAAAE,KAAAE,WAKAU,EAAAuD,cAAA,SAAAJ,GACAnD,EAAAyD,YAAAtD,EAAAH,EAAAwC,SAAAkB,MAAA,SAAAP,IAEAnD,EAAAyD,YAAAE,UACAC,KAAA,WACA5D,EAAAU,mBAAA,EACA,OAAAV,EAAAyD,YAAAI,SACA7D,EAAAc,gBAAA,EACAa,QAAAC,IAAA,cACAxB,EAAA,+BACAH,EAAA4B,GAAA,eAGA7B,EAAAyD,YAAAJ,OAAA,WACA,OAAArD,EAAAyD,YAAAI,SAAA7D,EAAAc,gBAAA,SC5RA1D,IAAAoC,WAAA,eAAA,SAAA,aAAA,SAAA,SAAA,eAAA,iBAAA,kBACA,SAAAsE,EAAA9D,EAAAI,EAAAH,EAAAC,EAAA6D,EAAA5D,GACA2D,EAAAE,YACAF,EAAAG,cAAA,EACAH,EAAAI,gBAAA,EACAJ,EAAApD,mBAAA,EACAoD,EAAAK,gBAAA,EACAL,EAAAvC,QACAuC,EAAAM,OACAzE,OAAA,oBACA0E,WAAA,wBACAC,SAAA,2BAEAR,EAAAS,oBAAA,EACAT,EAAAU,eAAA,EACAV,EAAAW,eACAX,EAAAY,aACAZ,EAAAa,aACAb,EAAAc,YACAd,EAAAe,eAAA,EAGAf,EAAAgB,QACA,KAAA,GAAA1C,GAAA,EAAAA,GAAA,GAAAA,IAAA,CACA,GAAA2C,IACAC,GAAA,KAAA5C,EACA6C,OAAAC,SAAAC,QAAA,OAAAC,IAAA,GAAAhD,EAAA,KAAA6C,OAAA,WAEAnB,GAAAgB,MAAAlG,KAAAmG,GAGA,UAAA7E,EAAAmF,MACAvB,EAAAwB,WAAA,GAGAtF,EAAAqD,OAAA,oBAAA,WACA,GAAArD,EAAAyD,YAAA,CACAK,EAAApD,mBAAA,CACA,IAAAyC,GAAAnD,EAAAyD,YAAA8B,GAEAzB,GAAAvC,MACAc,KAAArC,EAAAyD,YAAApB,KACAmD,aAAAxF,EAAAyD,YAAA+B,aACAC,QAAAzF,EAAAyD,YAAAgC,QACAC,OAAA1F,EAAAyD,YAAAiC,QAGA5B,EAAA6B,YACApG,KAAA,SACAyC,YAAA,SACA4D,MAAAvI,QAAAwI,KAAA7F,EAAAyD,YAAAqC,SAAAnG,UAEAJ,KAAA,iBACAyC,YAAA,aACA4D,MAAAvI,QAAAwI,KAAA7F,EAAAyD,YAAAqC,SAAAC,cAGAjC,EAAAa,UAAAtH,QAAAwI,KAAA7F,EAAAyD,YAAAkB,WAEAb,EAAAkC,cAAA7C,GAEAW,EAAAE,SAAAD,EAAAD,EAAAtB,SAAAkB,MAAA,SAAAP,EAAA,cACAW,EAAAE,SAAAL,UACAC,KAAA,SAAAxE,GACA0E,EAAAI,gBAAA,EACA,GAAA9E,EAAA6G,OAAAnC,EAAAG,cAAA,EAAAH,EAAAG,cAAA,IAEAH,EAAAE,SAAAX,OAAA,WACA,GAAAS,EAAAE,SAAAiC,OAAAnC,EAAAG,cAAA,EAAAH,EAAAG,cAAA,IAGAH,EAAAc,SAAAzE,EAAA2D,EAAAtB,SAAAkB,MAAA,iBAAAP,IACAW,EAAAc,SAAAjB,UACAC,KAAA,SAAAxE,GACAuC,QAAAC,IAAAxC,EAAAyE,QACAlC,QAAAC,IAAAxC,GACA0E,EAAAK,gBAAA,EACA,OAAA/E,EAAAyE,QAAAqC,SAAA9G,EAAAyE,SAAAC,EAAAe,eAAA,GACAlD,QAAAC,IAAAkC,EAAAe,iBACAsB,MAAA,SAAAC,GAAAzE,QAAA0E,MAAAD,QAIAtC,EAAAkC,cAAA,SAAA7C,GACAW,EAAAtB,SAAAkB,MAAA,eAAAP,EAAA,YAAAmD,KAAA,SACA1C,KAAA,SAAAxE,GACAA,EAAAmH,MAEAzC,EAAAY,UAAAtF,EAAAmH,MAFAzC,EAAAY,UAAArH,QAAAwI,KAAA7F,EAAA8B,kBAIAgC,EAAAU,eAAA,EACAV,EAAA0C,WAEAL,MAAA,SAAAC,GACAzE,QAAA0E,MAAAD,MAIAtC,EAAAa,UAAAtH,QAAAwI,KAAA7F,EAAAmC,kBAgBA2B,EAAA2C,YAAA,SAAA/C,GACA,GAAAgD,GAAA5C,EAAAE,SAAA2C,QAAAjD,EACA/B,SAAAC,IAAA8B,GACA/B,QAAAC,IAAA8E,GACA5C,EAAAE,SAAA4C,QAAAF,GACA9C,KAAA,WACAjC,QAAAC,IAAA,gBACAxB,EAAAsD,EAAArB,KAAA,cAEAV,QAAAC,IAAAkC,EAAAE,UACA,GAAAF,EAAAE,SAAAiC,SACAnC,EAAAG,cAAA,IAIAH,EAAA+C,cAAA,WAEA,GAAAC,KACAA,GAAA,SAAAhD,EAAAL,YAAA8B,IAAA,SAAAzB,EAAAvC,KAAAc,KACAyE,EAAA,SAAAhD,EAAAL,YAAA8B,IAAA,iBAAAzB,EAAAvC,KAAAiE,aACA1B,EAAAL,YAAAqC,SAAAnG,QACAmH,EAAA,SAAAhD,EAAAL,YAAA8B,IAAA,YAAAzB,EAAAvC,KAAAkE,QACAqB,EAAA,SAAAhD,EAAAL,YAAA8B,IAAA,WAAAzB,EAAAvC,KAAAmE,SAEAoB,EAAA,eAAAhD,EAAAL,YAAA8B,IAAA,SAAAzB,EAAAvC,KAAAc,KACAyE,EAAA,eAAAhD,EAAAL,YAAA8B,IAAA,iBAAAzB,EAAAvC,KAAAiE,cAGA7D,QAAAC,IAAAkF,GACAhD,EAAAtB,SAAAuE,OAAAD,GACAlD,KAAA,SAAAxE,GACAuC,QAAAC,IAAAxC,KAEA+G,MAAA,SAAAC,GACAzE,QAAA0E,MAAAD,MAIAtC,EAAAkD,eAAA,SAAAC,GACA,GAAAC,GAAA,SAAApD,EAAAL,YAAA8B,IACApC,EAAAW,EAAAL,YAAA8B,GAEA,IAAA,WAAA0B,EAAAjF,YAAA,CACA,GAAAmF,KACAA,GAAAD,EAAA,oBAAAD,EAAArB,MACA5F,EAAAyD,YAAAqC,SAAAnG,SACAgC,QAAAC,IAAA,0BACAuF,EAAAD,EAAA,cAAA,MAEApD,EAAAtB,SAAAuE,OAAAI,GACAvD,KAAA,SAAAxE,GACAgB,EAAA,gCACAuB,QAAAC,IAAAxC,KAEA+G,MAAA,SAAAC,GACAzE,QAAAC,IAAAyE,SAIA,GAAA,eAAAY,EAAAjF,YAAA,CACA,GAAAoF,KAEAA,GAAAF,EAAA,wBAAAD,EAAArB,MAEA5F,EAAAyD,YAAAqC,SAAAC,YAEAqB,EAAAF,EAAA,YAAA,KACAE,EAAA,eAAAjE,GAAA,OAGAiE,EAAA,eAAAjE,IACAwB,UAAA3E,EAAAmC,iBACAkF,QAAArH,EAAA8B,iBACAwF,SAAAxD,EAAAL,YAAA6D,SACA9B,aAAA1B,EAAAL,YAAA+B,aACA+B,SAAAzD,EAAAL,YAAA8D,SACAC,MAAA1D,EAAAL,YAAA+D,MACAnF,KAAAyB,EAAAL,YAAApB,MAGA+E,EAAA,SAAAjE,EAAA,YAAAnD,EAAA8B,iBAEAgC,EAAAkC,cAAA7C,IAGAW,EAAAtB,SAAAuE,OAAAK,GACAxD,KAAA,SAAAxE,GACAgB,EAAA,gCACAuB,QAAAC,IAAAxC,KAEA+G,MAAA,SAAAC,GACAzE,QAAAC,IAAAwE,KAGAzE,QAAAC,IAAAqF,EAAArB,OACAjE,QAAAC,IAAA5B,EAAAyD,YAAAqC,WAGAhC,EAAA2D,UAAA,WACA,GAAAC,MACAvE,EAAAnD,EAAAyD,YAAA8B,GAEA5D,SAAAC,IAAAkC,EAAAa,WAEAb,EAAA6D,gBAAA7D,EAAAa,UAAAiD,IAAA,SAAAC,GAEA,aADAA,GAAA,UACAA,IAGAH,EAAA,SAAAvE,EAAA,eAAAuE,EAAA,eAAAvE,EAAA,cAAAW,EAAA6D,gBACA7D,EAAAtB,SAAAuE,OAAAW,GACA9D,KAAA,SAAAxE,GACAgB,EAAA,mBACA+F,MAAA,SAAAC,GACAzE,QAAA0E,MAAAD,GACAhG,EAAA,uBAKA0D,EAAAgE,YAAA,WACA,GAAAC,MACA5E,EAAAnD,EAAAyD,YAAA8B,GAEAzB,GAAAkE,gBAAAlE,EAAAY,UAAAkD,IAAA,SAAAC,GAEA,aADAA,GAAA,UACAA,IAEAlG,QAAAC,IAAAkC,EAAAkE,iBAEAD,EAAA,SAAA5E,EAAA,aAAA4E,EAAA,eAAA5E,EAAA,aAAAW,EAAAkE,gBACAlE,EAAAtB,SAAAuE,OAAAgB,GACAnE,KAAA,SAAAxE,GACAuC,QAAAC,IAAAxC,GACAgB,EAAA,qBACA+F,MAAA,SAAAC,GACAzE,QAAA0E,MAAAD,GACAhG,EAAA,uBAKA0D,EAAAmE,WAAA,WACA,IAAA,GAAA7F,GAAA,EAAAA,EAAA0B,EAAAW,YAAAwB,OAAA7D,IAAA,CACA,GAAA0B,EAAAW,YAAArC,GAAA8F,SAAA,CACApE,EAAAS,oBAAA,CACA,OACAT,EAAAS,oBAAA,IAIAT,EAAAqE,uBAAA,SAAAC,GACAzG,QAAAC,IAAAwG,GACAnI,EAAA4B,GAAA,kBAAAwG,GAAAD,QC3QAhL,IAAAoC,WAAA,mBAAA,SAAA,SAAA,aAAA,SAAA,kBAAA,YAAA,gBACA,SAAAsE,EAAA7D,EAAAD,EAAAI,EAAAD,EAAAmI,EAAAC,GAEAzE,EAAA0E,OAAA,GACA1E,EAAA2E,mBAAA,EACA3E,EAAA4E,eAAA,EACA5E,EAAA6E,KAAA,EAEA7E,EAAAiD,OAAA,SAAAyB,EAAAI,GACA9E,EAAA2E,mBAAA,CACA,IAAAI,GAAA7I,EAAAwC,SAAAkB,MAAA,gBAAAoF,aAAAN,EACA1E,GAAAiF,YAAA5I,EAAA0I,GACA/E,EAAAiF,YAAApF,QAAA,WACAG,EAAA2E,mBAAA,EACAG,GACA9K,WAAA,WACAU,OAAAwK,SAAA,EAAAvL,SAAAwL,KAAAC,gBAGA,OAAApF,EAAAiF,YAAAlF,SACAC,EAAA4E,eAAA,MAKA5E,EAAAiD,OAAAjD,EAAA0E,QAAA,GAEA1E,EAAAqF,SAAA,WACA,MAAArF,GAAA0E,OAAAY,OAAAC,KAAAvF,EAAAiF,aAAA9C,OAAA,OACAnC,EAAA6E,KAAA,IAGA7E,EAAA0E,QAAA,GACA1E,EAAAiD,OAAAjD,EAAA0E,QAAA,OACA7G,SAAAC,IAAAkC,EAAA0E,UAGA1E,EAAA0D,MAAA,SAAAA,GACA/I,SAAA6K,KAAA,UAAA9B,EAAA,gCAGA1D,EAAAyF,SAAA,SAAAlF,EAAAmF,EAAA7G,GACAhB,QAAAC,IAAAyC,GACAP,EAAAX,IAAAqG,EACA1F,EAAAO,WAAAA,EACAiE,EAAAmB,MACAC,eAAA,oBACA/J,OAAAtC,QAAAsM,QAAAlM,SAAAwL,MACAW,YAAAjH,EACAkH,qBAAA,EACAC,kBAAA,EACAC,YAAA,KAIAjG,EAAAkG,aAAA,SAAAC,GACA,MAAAC,MAAAC,IAAA,GAAAC,MAAAA,KAAAC,MAAAJ,GAAAK,iBAAA,OAGAxG,EAAAyG,YAAA,WACAjC,EAAAkC,WC5DApN,IAAAoC,WAAA,eAAA,SAAA,SAAA,aAAA,SAAA,eAAA,YAAA,kBAAA,QACA,SAAAsE,EAAA7D,EAAAD,EAAAI,EAAAF,EAAAoI,EAAAnI,EAAAsK,GAIA3G,EAAA4G,MAAAxF,SACApB,EAAA6G,WAAA7G,EAAA4G,MAAAE,MACA9G,EAAA+G,aAAA,EACA/G,EAAAgH,UAAA,EACAhH,EAAAiH,UACAC,YAAA9F,SAAAC,QAAA,QAAAF,OAAA,SACAgG,UAAA/F,SAAAgG,MAAA,QAAAjG,OAAA,UAGAnB,EAAAqH,cACAxJ,QAAAC,IAAAkC,EAAA6G,YACA7G,EAAAsH,YAAA,EACAtH,EAAAxB,UAAA,KACAwB,EAAAvB,QAAA,KACAuB,EAAAuH,YAAA,KACAvH,EAAAwH,SAAA,KACAxH,EAAAyH,KAAA,EACAzH,EAAA0H,iBAAA,KACA1H,EAAAK,gBAAA,EAMAL,EAAA2H,cAAA,SAAAzG,GACAlB,EAAAK,gBAAA,CACA,IAAAuH,GAAA1L,EAAAwC,SAAAkB,MAAA,gBAAAxD,EAAAiD,IAAA,IAAA+B,OAAAF,GAAAG,QAAA,QAAAwG,UACA7H,GAAAc,SAAAzE,EAAAuL,GACA5H,EAAAc,SAAAjB,QAAA,WACAG,EAAAK,gBAAA,KAQAL,EAAA8H,WAAA,SAAAC,GACA/H,EAAAgI,WAAAD,EAAA5G,OAAA,KACA,GAAAnB,EAAAgH,WACAe,EAAA1G,QAAA,QAEArB,EAAAiI,WAAAF,EAAA5G,OAAA,KACAnB,EAAAkI,MAAAH,EAAA5G,OAAA,OACAnB,EAAAmI,UAAAJ,EAAA5G,OAAA,QACAnB,EAAA2H,cAAAI,EAAAF,YAGA7H,EAAA8H,WAAA9H,EAAA4G,OASA5G,EAAAoI,WAAA,SAAAL,GACA/H,EAAA8H,WAAAC,EACA,KAAA,GAAAzJ,GAAA,EAAAA,EAAA,EAAAA,IACAwI,IAAAiB,EAAA1G,QAAA,QAAAC,IAAAhD,EAAA,QACA0B,EAAAqH,WAAA/I,IACA6J,UAAArB,IAAA3F,OAAA,QACAC,OAAA7H,QAAAwI,KAAA+E,KACA5F,GAAA4F,IAAAe,UACAE,KAAAjB,IAAA3F,OAAA,UAKAnB,EAAAoI,WAAAhH,UAEAvD,QAAAC,IAAAkC,EAAAqH,YAEArH,EAAAT,OAAA,YAAA,WACA,GAAAS,EAAAgH,YACAhH,EAAA+G,aAAA,KAIA/G,EAAAqI,SAAA,WAGA,MAAArI,GAAAgH,UAAA,OACAhH,EAAAsI,YAAA,IAGAtI,EAAA+G,aAAA,EACA/G,EAAAgH,WAAA,MAEAhH,GAAAoI,WAAAhH,SAAAE,IAAAtB,EAAAgH,UAAA,YAGAhH,EAAAuI,aAAA,WACA,GAAA,GAAAvI,EAAAgH,UAEA,YADAhH,EAAA+G,aAAA,EAGA/G,GAAAsI,YAAA,EAEAtI,EAAAwI,YAAApH,SAAAE,IAAAtB,EAAAgH,UAAA,KAEAhH,EAAAgH,WAAA,CAEA,IAAAyB,GAAArH,OAAApB,EAAAwI,aAAAE,SAAA,EAAA,IAEA1I,GAAAoI,WAAAK,IAsBA5K,QAAA8K,OACA,IAAApI,GAAArE,EAAAwC,SAAAkB,MAAA,eAAAxD,EAAAiD,IACAW,GAAAO,WAAAlE,EAAAkE,GACA1C,QAAAC,IAAAkC,EAAAO,YAEAP,EAAAO,WAAAV,QAAA,WACAhC,QAAAC,IAAAkC,EAAAO,WAAAM,UAAA,MAGAb,EAAA4I,WAAA,WACA,IAAA,GAAAtK,GAAA,EAAAA,EAAA0B,EAAAE,SAAAiC,OAAA7D,IAAA,CACA,GAAAyJ,GAAA3G,OAAA,GAAAkF,MAAAtG,EAAAE,SAAA5B,GAAA6H,WACA0C,EAAAzH,OAAA2G,GAAAe,SAAA,EACA9I,GAAAE,SAAA5B,GAAAuK,IAAAA,IAIA7I,EAAA+I,KAAA,SAAA9H,EAAApC,GACAmB,EAAAuH,YAAAnG,OAAAH,GAAAE,OAAA,UACAnB,EAAAgJ,YAAA/H,GACApD,QAAAC,IAAAmD,GACAuD,EAAAmB,MACAC,eAAA,cACA/J,OAAAtC,QAAAsM,QAAAlM,SAAAwL,MACAW,YAAAjH,EACAkH,qBAAA,EACAE,YAAA,KAQAjG,EAAAgJ,YAAA,SAAAlC,GACA9G,EAAA8G,IAAAA,EACA9G,EAAAgB,QACA,KAAA,GAAA1C,GAAA,EAAAA,GAAA,GAAAA,IAAA,CACA,GAAA2C,IACAC,GAAAE,OAAA0F,GAAAzF,QAAA,OAAAC,IAAA,GAAAhD,EAAA,KAAAuJ,UACA1G,OAAAC,OAAA0F,GAAAzF,QAAA,OAAAC,IAAA,GAAAhD,EAAA,KAAA6C,OAAA,WACAC,OAAAA,OAAA0F,GAAAzF,QAAA,OAAAC,IAAA,GAAAhD,EAAA,KAAA6C,OAAA,WAGA,KAAAuE,MAAA1F,GAAAc,SAAAgG,GACA7F,EAAAC,IAAAlB,EAAAc,SAAAgG,GAAApB,KAAAlH,WAAAyC,EAAAC,IAAAlB,EAAAc,SAAAgG,GAAApB,KAAAjH,UACAwC,EAAA,aAAA,EAIA,IAAAgI,GAAAhI,EAAAC,GAAAE,OAAA0F,GAAAzF,QAAA,OAAAwG,UAEAjF,EAAAxB,OAAA0F,GAAAA,OAEAmC,EAAAjJ,EAAAO,WAAAM,UAAA+B,GAAApE,WAAAyK,EAAAjJ,EAAAO,WAAAM,UAAA+B,GAAAnE,WACAwC,EAAA,aAAA,GAGAjB,EAAAgB,MAAAlG,KAAAmG,GAEApD,QAAAC,IAAAkC,EAAAgB,QAGAhB,EAAAkJ,aAAA,WACA,GAAA,MAAAlJ,EAAAvB,SAAA,MAAAuB,EAAAxB,UAAA,CAGA,GAAA2K,GAAA/H,OAAAoG,SAAAxH,EAAAvB,QAAAyC,GAAAlB,EAAAxB,UAAA0C,IACAkI,EAAAD,EAAA1M,IAAA,SACA4M,EAAAF,EAAA1M,IAAA,UAEA2M,IAAA,EACAC,EAAA,EACA,GAAAD,EACApJ,EAAAwH,SAAA4B,EAAA,aAAAC,EAAA,WAEArJ,EAAAwH,SAAA4B,EAAA,cAAAC,EAAA,WAGA,GAAAD,EACApJ,EAAAwH,SAAA4B,EAAA,QAEApJ,EAAAwH,SAAA4B,EAAA,SAIApJ,EAAAwH,SAAA6B,EAAA,WAEAxL,QAAAC,IAAAkC,EAAAwH,UACAxH,EAAAsJ,aAIAtJ,EAAAsJ,SAAA,WACA,GAAA,MAAAtJ,EAAA0H,iBAAA,CAGA1H,EAAAyH,KAAA,CAEA,KAAA,GAAAnJ,GAAA,EAAAA,EAAA0B,EAAA0H,iBAAAvF,OAAA7D,IAAA,CACA,GAAAuK,GAAAzH,SAAAmI,KAAAnI,OAAApB,EAAA0H,iBAAApJ,GAAA6H,UAAA,QACA,SAAA,GACA,IAAA0C,GAAA,GAAAA,EAAA,EAEA7I,EAAAyH,MAAAzH,EAAAO,WAAAgD,QAAA,GAAApF,IACA,MACA,KAAA0K,GAAA,GAAAA,EAAA,EAEA7I,EAAAyH,MAAAzH,EAAAO,WAAAgD,QAAA,GAAApF,IACA,MACA,KAAA0K,GAAA,GAAAA,EAAA,EAEA7I,EAAAyH,MAAAzH,EAAAO,WAAAgD,QAAA,GAAApF,IACA,MACA,KAAA0K,GAAA,GAAAA,EAAA,GAEA7I,EAAAyH,MAAAzH,EAAAO,WAAAgD,QAAA,GAAApF,IACA,MACA,KAAA0K,GAAA,GAEA7I,EAAAyH,MAAAzH,EAAAO,WAAAgD,QAAA,GAAApF,MAMA6B,EAAAyH,KAAAzH,EAAAyH,MAAAzH,EAAAvB,QAAAyC,GAAAlB,EAAAxB,UAAA0C,IAAA,KACAlB,EAAAO,WAAAgD,UAKAvD,EAAAyG,YAAA,WACAjC,EAAAkC,OACA5G,KAAA,WACAE,EAAAxB,UAAA,KACAwB,EAAAvB,QAAA,KACAuB,EAAAwH,SAAA,KACAxH,EAAAyH,KAAA,EACAzH,EAAA0H,iBAAA,QAIA1H,EAAAwJ,eAAA,WAwBA7C,GACA3L,OAAA,OACAE,IAAA,kBACAD,KAAA,EACAK,MACAkD,UAAAwB,EAAAxB,UAAA0C,GACAzC,QAAAuB,EAAAvB,QAAAyC,GACA4F,IAAA9G,EAAA8G,IACAjL,QACA0I,GAAAvE,EAAAL,YAAA8B,IACAG,OAAA5B,EAAAL,YAAAiC,OACA6H,QAAAzJ,EAAAL,YAAAgC,QACAzB,SAAAF,EAAA0H,iBACAhE,MAAA1D,EAAAL,YAAA+D,MACAnF,KAAAyB,EAAAL,YAAApB,MAEAgC,YACAgE,GAAAnI,EAAAiD,IACAqE,MAAA1D,EAAAO,WAAAmD,MACAnF,KAAAyB,EAAAO,WAAAhC,SAGAuB,KAAA,SAAAxE,GACAuC,QAAAC,IAAAxC,GACAgB,EAAA,sBACA0D,EAAAyG,gBACApE,MAAA,SAAAC,GACAtC,EAAAyG,cACAnK,EAAA,gBACAuB,QAAA0E,MAAAD,SCzUAhJ,IAAAoC,WAAA,kBACA,SAAA,SAAA,aAAA,SAAA,kBAAA,eAAA,YAAA,QACA,SAAAsE,EAAA7D,EAAAD,EAAAI,EAAAD,EAAAD,EAAAoI,EAAAmC,GACA3G,EAAA0J,eAAA,EACA1J,EAAA2J,aAEA3J,EAAAkG,aAAA,SAAAC,GACA,MAAAC,MAAAC,IAAA,GAAAC,MAAAA,KAAAC,MAAAJ,GAAAK,iBAAA,OAGAtK,EAAAqD,OAAA,oBAAA,WACA,GAAArD,EAAAyD,YAAA,CACA,GAAAiK,GAAA1N,EAAAwC,SAAAkB,MAAA,iBAAA1D,EAAAyD,YAAA8B,IAAA,IAAArF,EAAAmI,GACAvE,GAAA6J,QAAAxN,EAAAuN,GAEA5J,EAAA6J,QAAAhK,UACAC,KAAA,SAAAxE,GACA0E,EAAA0J,eAAA,EACA,OAAApO,EAAAyE,SACAzD,EAAA,qBACAH,EAAA4B,GAAA,kBAEAsE,MAAA,SAAAC,GAAAzE,QAAA0E,MAAAD,QAIAtC,EAAA8J,OAAA,SAAAjL,GACA3C,EAAAwC,SAAAkB,MAAA,iBAAA4C,KAAA,SACA1C,KAAA,SAAAxE,GACA0E,EAAA2J,aAAArO,EAAAmH,QACAJ,MAAA,SAAAC,GACAzE,QAAA0E,MAAAD,KAEAkC,EAAAmB,MACAC,eAAA,gBACA/J,OAAAtC,QAAAsM,QAAAlM,SAAAwL,MACAW,YAAAjH,EACAkH,qBAAA,KAIA/F,EAAAyG,YAAA,WACAjC,EAAAkC,QAGA1G,EAAA+J,cAAA,SAAAC,GAEA,GAAAC,GAAAzF,EAAAyF,UACAC,MAAA,iBACAC,YAAA,gCACAC,UAAA,kBACAtE,YAAAkE,GACAK,GAAA,kBACAC,OAAA,uBAEA9F,GAAAmB,KAAAsE,GAAAnK,KAAA,WACA6G,GACA3L,OAAA,OACAE,IAAA,kBACAD,KAAA,EACAK,MACAgJ,UAAAtE,EAAA6J,QAAApI,IACA8I,SAAAvK,EAAA6J,QAAAhO,OAAA0I,GACAiG,aAAAxK,EAAA6J,QAAAtJ,WAAAgE,OAGA,kBClEAjL,IAAAoC,WAAA,gBAAA,SAAA,aAAA,SAAA,SAAA,iBAAA,eAAA,WAAA,SAAAsE,EAAA9D,EAAAI,EAAAH,EAAA8D,EAAA7D,EAAAqO,GACAzK,EAAAE,WAAAiG,SAAA,KAAA5H,KAAA,OACAyB,EAAA0K,eAAA,EACA1K,EAAA2K,aAAA,EACA3K,EAAA4K,sBAAA,EACA5K,EAAA6K,kBACA7K,EAAA8K,UAAA,EACAjN,QAAAC,IAAA1B,EAAA2O,MACA,SAAA3O,EAAA2O,OACAlN,QAAAC,IAAA1B,EAAA2O,MACA/K,EAAA8K,UAAA,EACA9K,EAAAE,YAIA,IAAA8K,GAAA5J,OAAAoG,SAAA,GAAA,QACAxH,GAAAiL,QAAA7J,SAAAsH,SAAAsC,EAAA,SAAAE,SACAlL,EAAAmL,QAAA/J,SAAAsH,SAAA,EAAA,SAAAwC,SAEAhP,EAAAqD,OAAA,oBAAA,WAEA,GADA1B,QAAAC,IAAA5B,EAAAyD,aACAyC,SAAAlG,EAAAyD,YAAA,CACA,GAAAN,GAAAnD,EAAAyD,YAAA8B,GACAzB,GAAA6K,eAAA5K,EAAAD,EAAAtB,SAAAkB,MAAA,SAAAP,EAAA,cACAW,EAAA6K,eAAAhL,QAAA,WAEA,GADAG,EAAA4K,sBAAA,EACA5K,EAAA8K,SAAA,CACAjN,QAAAuN,KAAA,sBACA,KAAA,GAAA9M,GAAA,EAAAA,EAAA0B,EAAA6K,eAAA1I,OAAA7D,IACAT,QAAAC,IAAAkC,EAAA6K,eAAAvM,IACA0B,EAAAqL,YAAA9R,QAAAwI,KAAA/B,EAAA6K,eAAAvM,IACA0B,EAAAqL,YAAAlF,SAAA,GAAAG,MAAAtG,EAAAqL,YAAAlF,UACAnG,EAAAE,SAAApF,KAAAkF,EAAAqL,aACArL,EAAA4I,gBAIA5I,EAAA6K,eAAAtL,OAAA,SAAA+L,GACAzN,QAAAC,IAAAkC,EAAA6K,eAAA1I,QACAnC,EAAA6K,eAAA1I,OAAAnC,EAAAE,SAAAiC,QAAA,IACAnC,EAAA2K,aAAA,QASA3K,EAAAuL,iBAAA,WAAA,WACAvL,EAAA0K,eAAA,EACA1K,EAAAE,SAAAiC,OAAA,IACAnC,EAAA2K,aAAA,GAEA,GAAA3K,EAAAE,SAAAiC,QAAA,GAAAnC,EAAA6K,eAAA1I,SACAnC,EAAA0K,eAAA,GAEA1K,EAAA6K,eAAA1I,OAAAnC,EAAAE,SAAAiC,QAAA,IACAnC,EAAA2K,aAAA,KAIA3K,EAAA4I,WAAA,WACA,IAAA,GAAAtK,GAAA,EAAAA,EAAA0B,EAAAE,SAAAiC,OAAA7D,IAAA,CACA,GAAAyJ,GAAA3G,OAAA,GAAAkF,MAAAtG,EAAAE,SAAA5B,GAAA6H,WACA0C,EAAAzH,OAAA2G,GAAAe,SAAA,EACA9I,GAAAE,SAAA5B,GAAAuK,IAAAA,IAIA7I,EAAAwL,aAAA,WACAxL,EAAAE,SAAApF,MAAAqL,SAAA,KAAA5H,KAAA,QAGAyB,EAAAyL,YAAA,SAAA7L,GACA,GAAAgD,GAAA5C,EAAAE,SAAA2C,QAAAjD,EACAI,GAAAE,SAAAwL,OAAA9I,EAAA,GACA5C,EAAA2K,aAAA,EACA3K,EAAA6K,eAAA/H,QAAAF,GACA9C,KAAA,WACAjC,QAAAC,IAAA,gBACAxB,EAAAsD,EAAArB,KAAA,eAGAyB,EAAA2L,UAAA,SAAA/L,GACA/B,QAAAC,IAAA8B,GACAI,EAAAtB,SAAAkB,MAAA,SAAA1D,EAAAyD,YAAA8B,IAAA,aAAA7B,EAAA6B,KAAAwB,QACA1E,KAAAqB,EAAArB,KACA4H,SAAAvG,EAAAuG,SAAAyF,YACA9L,KAAA,SAAAxE,GACAuC,QAAAC,IAAAxC,GACAgB,EAAA,kBAEA+F,MAAA,SAAAC,GACAzE,QAAA0E,MAAAD,GACAhG,EAAA,2BAIA0D,EAAA6L,SAAA,SAAAjM,EAAAkM,EAAAlJ,GACA/E,QAAAkO,MAAA,gBACA/L,EAAA6K,eAAA1I,QAAA,GACA7F,EAAA,+BACA0D,EAAA2K,aAAA,GAEA3K,EAAA6K,eAAAmB,MACAzN,KAAAqB,EAAArB,KACA4H,SAAAvG,EAAAuG,SAAAyF,YACA9L,KAAA,SAAAxE,GACAuC,QAAAC,IAAAxC,GACAgB,EAAAsD,EAAArB,KAAA,YACA8D,MAAA,SAAAC,GACAzE,QAAA0E,MAAAD,GACAhG,EAAA,6BCjHAhD,IAAAoC,WAAA,YAAA,SAAA,SAAA,aAAA,SAAA,kBAAA,YAAA,QACA,SAAAsE,EAAA7D,EAAAD,EAAAI,EAAAD,EAAAmI,EAAAmC,GACA3G,EAAA+H,KAAA,KACA/H,EAAA4G,MAAA,GAAAN,MAEAtG,EAAAmL,QAAA/J,SAAAE,IAAA,EAAA,SAAA4J,SACAlL,EAAAvB,QAAA,KACAuB,EAAAxB,UAAA,KACAwB,EAAA0H,oBACA1H,EAAAiM,WACAjM,EAAAkM,UAAA,EACAlM,EAAAG,cAAA,EAEAjE,EAAAwC,SAAAkB,MAAA,uBAAA4C,KAAA,SACA1C,KAAA,SAAAxE,GACA0E,EAAAmM,YAAA7Q,EAAAmH,QAGAvG,EAAAqD,OAAA,oBAAA,WACArD,EAAAU,mBACAV,EAAAyD,YAAAO,WACAF,EAAAG,cAAA,KAMAH,EAAAgB,QACA,KAAA,GAAA1C,GAAA,EAAAA,GAAA,GAAAA,IAAA,CACA,GAAA2C,IACAC,GAAA,KAAA5C,EACA6C,OAAAC,SAAAC,QAAA,OAAAC,IAAA,GAAAhD,EAAA,KAAA6C,OAAA,WAEAnB,GAAAgB,MAAAlG,KAAAmG,GAGAjB,EAAAoM,MAAA,WACApM,EAAAiM,WACAjM,EAAAkM,UAAA,GAGAlM,EAAAsJ,SAAA,SAAA/F,GACA,GAAAA,EAAA,CAGA,IAAA,GAFAkE,GAAA,EAEAnJ,EAAA,EAAAA,EAAA0B,EAAA0H,iBAAAvF,OAAA7D,IAAA,CACA,GAAAuK,GAAAzH,SAAAmI,KAAAnI,OAAApB,EAAA0H,iBAAApJ,GAAA6H,UAAA,QACA,SAAA,GACA,IAAA0C,GAAA,GAAAA,EAAA,EAEApB,GAAAlE,EAAA,GAAApF,IACA,MACA,KAAA0K,GAAA,GAAAA,EAAA,EAEApB,GAAAlE,EAAA,GAAApF,IACA,MACA,KAAA0K,GAAA,GAAAA,EAAA,EAEApB,GAAAlE,EAAA,GAAApF,IACA,MACA,KAAA0K,GAAA,GAAAA,EAAA,GAEApB,GAAAlE,EAAA,GAAApF,IACA,MACA,KAAA0K,GAAA,GAEApB,GAAAlE,EAAA,GAAApF,MAKA,MADAsJ,GAAAA,GAAAzH,EAAAvB,QAAAyC,GAAAlB,EAAAxB,UAAA0C,IAAA,OAIAlB,EAAAqM,KAAA,WACArM,EAAAsM,WAAA,CAMA3F,IACA3L,OAAA,OACAE,IAAA,QACAD,KAAA,EAEAK,MACAkD,UAAAwB,EAAAxB,UAAA0C,GACAzC,QAAAuB,EAAAvB,QAAAyC,GACA6G,KAAA/H,EAAA+H,KAAA6D,aAEA9L,KAAA,SAAAyM,GACA1O,QAAAC,IAAAyO,GACAvM,EAAAsM,WAAA,EACAtM,EAAAkM,UAAA,EACAlM,EAAAiM,QAAAM,EAAAjR,OACA+G,MAAA,SAAAC,GACAkC,EAAAmB,KACAnB,EAAAgI,QACAzG,qBAAA,GACAmE,MAAA,4BACAC,YAAA,6BAAAnK,EAAAmM,aACA/B,UAAA,4BACAC,GAAA,OAEArK,EAAAsM,WAAA,KAOAtM,EAAA+I,KAAA,SAAAxI,GAGAoG,GACA3L,OAAA,OACAE,IAAA,kBACAD,KAAA,EACAK,MACAkD,UAAA4C,OAAApB,EAAA+H,KAAA6D,WAAAtK,IAAAtB,EAAAxB,UAAA0C,GAAA,MAAA2G,UACApJ,QAAA2C,OAAApB,EAAA+H,KAAA6D,WAAAtK,IAAAtB,EAAAvB,QAAAyC,GAAA,MAAA2G,UACAf,IAAA9G,EAAA+H,KAAA6D,UACA/P,QACA0I,GAAAvE,EAAAL,YAAA8B,IACAG,OAAA5B,EAAAL,YAAAiC,OACA6H,QAAAzJ,EAAAL,YAAAgC,QACAzB,SAAAF,EAAA0H,iBACAhE,MAAA1D,EAAAL,YAAA+D,MACAnF,KAAAyB,EAAAL,YAAApB,MAEAgC,YACAgE,GAAAhE,EAAAlB,IACAqE,MAAAnD,EAAAmD,MACAnF,KAAAgC,EAAAhC,SAGAuB,KAAA,SAAAxE,GACAuC,QAAAC,IAAAxC,GAEAkJ,EAAAmB,KACAnB,EAAAgI,QACAzG,qBAAA,GACAmE,MAAA,sBACAC,YAAA,0CACAC,UAAA,sBACAC,GAAA,SAEAhI,MAAA,SAAAC,GACAhG,EAAA,kBACAuB,QAAA0E,MAAAD,SCtJAhJ,IAAAoC,WAAA,YAAA,SAAA,SAAA,aAAA,SAAA,gBAAA,kBAAA,YACA,SAAAsE,EAAA7D,EAAAD,EAAAI,EAAAC,EAAAF,EAAAmI,GACAxE,EAAA5E,MAAAe,EACA6D,EAAAvC,QACAvB,EAAAiD,SAAA,EACAa,EAAAyM,WAAA,EACAzM,EAAAN,KAAAnD,IAIAL,EAAAkD,UAAA,WACAzF,SAAAG,cAAA,YAAAD,UAAA,SACAF,SAAAG,cAAA,YAAAD,UAAA,iBACAG,WAAA,WACAL,SAAAG,cAAA,YAAAD,UAAA,UACA,MAGAmG,EAAA0M,UAAA,WACA1S,WAAA,WACAgG,EAAAyM,WAAA,GACA,KACAzM,EAAAyM,YAGAvQ,EAAAiD,QAIAa,EAAAZ,aAHAzF,SAAAG,cAAA,YAAAD,WAAA,QACAF,SAAAG,cAAA,YAAAD,WAAA,SAIAqC,EAAAiD,SAAAjD,EAAAiD,QACAa,EAAAyM,WAAA,IAIAzM,EAAA2M,iBAAA,WACA,GAAAC,GAAA,GAAAvP,UAAAqC,KAAAmN,kBAEAxP,UAAAqC,OAAAoN,gBAAAF,GACA9M,KAAA,SAAAxE,GACA,MAAA0E,GAAAtB,SAAAkB,MAAA,SAAAtE,EAAAmC,KAAA4B,KAAAmD,KAAA,WAEA1C,KAAA,SAAAxE,GACAuC,QAAAC,IAAAxC,EAAAmH,OACA,MAAAnH,EAAAmH,OACAnG,EAAA,yBACAH,EAAA4B,GAAA,YAAA/B,aAAA,KAEAG,EAAA4B,GAAA,iBAGAsE,MAAA,SAAAE,GACAjG,EAAA,uBACAuB,QAAAC,IAAAyE,MAIAvC,EAAA+M,eAAA,WACAvI,EAAAmB,MACAC,eAAA,kBACA/J,OAAAtC,QAAAsM,QAAAlM,SAAAwL,MACAW,YAAAjH,MACAkH,qBAAA,EACAE,YAAA,KAIAjG,EAAAgN,iBAAA,WACA3P,SAAAqC,OAAAuN,uBAAAjN,EAAAvC,KAAAiG,OACA5D,KAAA,SAAAxE,GACAuC,QAAAC,IAAAxC,GACAgB,EAAA,8BACA+F,MAAA,SAAAC,GACAzE,QAAA0E,MAAAD,GACAhG,EAAA,kCAEAkI,EAAAkC,QAEA1G,EAAAyG,YAAA,WACAjC,EAAAkC,QAIA1G,EAAAkN,MAAA,WACA7P,SAAAqC,OAAAyN,2BAAAnN,EAAAvC,KAAAiG,MAAA1D,EAAAvC,KAAA2P,UACAtN,KAAA,SAAAxE,GACAY,EAAAY,iBAAA,EACAkD,EAAAP,cAAAnE,EAAA+D,KAEAlD,EAAA4B,GAAA,eACAzB,EAAA,cAEA+F,MAAA,SAAAC,GACAzE,QAAAC,IAAA,QAAAwE,GACA,uBAAAA,EAAA+K,MACA/Q,EAAA,sBAEA,uBAAAgG,EAAA+K,MACA/Q,EAAA,qBAIA0D,EAAAsN,OAAA,WACAjQ,SAAAqC,OAAA6N,UAAAzN,KAAA,WACA5D,EAAAW,UAAA,EACAnC,OAAAC,SAAA6S,SACAlR,EAAA,gBACA,SAAAiG,GACAjG,EAAA,wBC7GAhD,IAAAoC,WAAA,gBAAA,SAAA,SAAA,aAAA,SAAA,eAAA,YACA,SAAAsE,EAAA7D,EAAAD,EAAAI,EAAAF,EAAAoI,GACAxE,EAAAvC,MACA+F,SAAA,2DACA4J,SAAA,KACAK,eAAA,MAEAzN,EAAAvC,KAAAuE,UACAnG,QAAA,EACAoG,YAAA,GAGA/F,EAAAqD,OAAA,WAAA,WACA1B,QAAAC,IAAA,sBAAA5B,EAAAa,UACAb,EAAAW,UACA,cAAAX,EAAAa,SAAA2Q,aAAA,GAAAC,YACA3N,EAAA4N,6BAIA/P,QAAAC,IAAA,gBAAA1B,EAAAJ,aACA6B,QAAAC,IAAA,uBAAA5B,EAAAW,UACAmD,EAAA4N,yBAAA,WACA,GAAAxR,EAAAJ,aAAAE,EAAAW,YAAA,EAAA,CACAgB,QAAAC,IAAA,0BACAkC,EAAA6N,iBAAA,EACA7N,EAAA8N,qBAAA,CACA,IAAArQ,GAAAJ,SAAAqC,OAAAC,WACAK,GAAAvC,KAAAc,KAAAd,EAAAsQ,YACA/N,EAAAvC,KAAA4B,IAAA5B,EAAA4B,IACAW,EAAAvC,KAAA+F,SAAA/F,EAAA+F,SACAxD,EAAAvC,KAAAiG,MAAAjG,EAAAiG,QAKA1D,EAAAyD,SAAA,IAEA,IAAAuK,GAAA5M,OAAAoG,SAAA,GAAA,QAEAxH,GAAAmL,QAAA/J,SAAAsH,SAAAsF,GAAA9C,SAEAlL,EAAA6N,iBAAA,EAEA7N,EAAAiO,cAAA,WACAjO,EAAA6N,iBAAA,EACA7N,EAAAvC,KAAA2P,SAAA,GACApN,EAAAvC,KAAAgQ,eAAA,IAGAzN,EAAAkO,cAAA,WACAlO,EAAAvC,KAAA2P,SAAAjL,QAAA,GAAAnC,EAAAvC,KAAA2P,WAAApN,EAAAvC,KAAAgQ,eACAzN,EAAA6N,iBAAA,EAEA7N,EAAA6N,iBAAA,GAIA7N,EAAAmO,gBAAA,WACAnO,EAAAoO,WAAA,EACApO,EAAAqO,QAAA,GAGArO,EAAAsO,MAAA,aAKAtO,EAAAuO,cAAA,YACAvO,EAAAvC,KAAAuE,SAAAnG,QAAAmE,EAAAvC,KAAAuE,SAAAC,cACAjC,EAAAwO,YAAA,IAQAxO,EAAAyO,SAAA,WACA,MAAAzO,GAAA8N,wBACA9N,GAAA0O,mBAAA1O,EAAAvC,KAAA4B,KAIAW,EAAAvC,KAAA2P,WAAApN,EAAAvC,KAAAgQ,mBACAnR,GAAA,6BAKAe,UAAAqC,OAAAiP,+BAAA3O,EAAAvC,KAAAiG,MAAA1D,EAAAvC,KAAA2P,UACAtN,KAAA,SAAAxE,GACAuC,QAAAC,IAAAxC,GACA+B,SAAAqC,OAAAyN,2BAAAnN,EAAAvC,KAAAiG,MAAA1D,EAAAvC,KAAA2P,UACAtN,KAAA,SAAAxE,GACAuC,QAAAC,IAAAxC,GACA0E,EAAA0O,mBAAApT,EAAA+D,OAEAgD,MAAA,SAAAE,GACA1E,QAAAC,IAAAyE,OAGAF,MAAA,SAAAE,GAEA1E,QAAAC,IAAAyE,EACAA,GAAA8K,KACA9K,EAAAqM,OAEAtS,GADA,6BAAAiG,EAAA8K,KACA,wBAEA,2BAIArN,EAAA6O,iBAAA,WACA7O,EAAAoO,WAAA,EACApO,EAAAqO,QAAA,GAGArO,EAAA2M,iBAAA,WAMA,GAAAC,GAAA,GAAAvP,UAAAqC,KAAAmN,kBAEAxP,UAAAqC,OAAAoN,gBAAAF,GACA9M,KAAA,SAAAxE,GACAuC,QAAAC,IAAAxC,EAEAA,GAAAwT,WAAAC,YAEAzT,EAAAmC,IACAuC,GAAA0C,OAAA,WACA1C,EAAA6N,iBAAA,EACA7N,EAAA8N,qBAAA,EAEA9N,EAAAvC,KAAAc,KAAAjD,EAAAmC,KAAAsQ,YACA/N,EAAAvC,KAAA4B,IAAA/D,EAAAmC,KAAA4B,IACAW,EAAAvC,KAAA+F,SAAAlI,EAAAmC,KAAA+F,SACAxD,EAAAvC,KAAAiG,MAAApI,EAAAmC,KAAAiG,UAMArB,MAAA,SAAAE,GACAjG,EAAA,mCACAuB,QAAAC,IAAAyE,MASAvC,EAAA0O,mBAAA,SAAArP,GACAxB,QAAAkO,MAAA,0BACA,IAAAiD,KACAhP,GAAAvC,KAAAgG,SAAAzD,EAAAyD,SAAAmI,UACA/N,QAAAC,IAAAkC,EAAAvC,YACAuC,GAAAvC,KAAA,eACAuC,GAAAvC,KAAA,eAEAuC,EAAAvC,KAAAuE,SAAAC,cAAA,IACApE,QAAAC,IAAA,wBACAkR,EAAA,eAAA3P,IACAwB,UAAA3E,EAAAmC,iBACAkF,QAAArH,EAAA8B,iBACAwF,SAAAxD,EAAAvC,KAAA+F,SACA9B,aAAA1B,EAAAvC,KAAAiE,aACA+B,SAAAzD,EAAAvC,KAAAgG,SACAC,MAAA1D,EAAAvC,KAAAiG,MACAnF,KAAAyB,EAAAvC,KAAAc,MAEAyB,EAAAvC,KAAA8F,QAAArH,EAAA8B,iBACAgC,EAAAvC,KAAAoD,UAAA3E,EAAAmC,kBAWAR,QAAAC,IAAAkR,GACAA,EAAA,SAAA3P,GAAAW,EAAAvC,KAEAI,QAAAC,IAAA,sBAAAkR,GACAhP,EAAAtB,SAAAuE,OAAA+L,GACAlP,KAAA,SAAAxE,GACAuC,QAAAC,IAAA,mBACAxB,EAAA,2BACA0D,EAAAvC,KAAAuE,SAAAC,YAAAjC,EAAAvC,KAAAuE,SAAAnG,QACAM,EAAA4B,GAAA,eAEAiC,EAAAvC,KAAAuE,SAAAC,YACA9F,EAAA4B,GAAA,eAEAiC,EAAAvC,KAAAuE,SAAAnG,QACAM,EAAA4B,GAAA,WAEAiC,EAAA0C,OAAA,WACAxG,EAAAc,gBAAA,MAGAqF,MAAA,SAAA/G,GACAuC,QAAA0E,MAAAjH,GACAgB,EAAA,0BAEAuB,QAAAoR","file":"app.js","sourcesContent":["/**\n * babysitting Module\n *\n * Description\n */\napp = angular.module('babysitting', ['ui.router', 'ngAnimate', 'ngMaterial', 'firebase', 'ngMessages', 'ngOrderObjectBy'])\n\n\napp.factory('$toast', function() {\n    return function(text) {\n        document.getElementById(\"toast\").className += \"animate\";\n        document.querySelector('#toast span').innerHTML = text;\n        setTimeout(\n            function() {\n                document.getElementById(\"toast\").className = \"\";\n            }, 3000);\n    }\n});\napp.config(['$stateProvider', '$urlRouterProvider', '$mdThemingProvider', '$httpProvider',\n    function($stateProvider, $urlRouterProvider, $mdThemingProvider, $httpProvider) {\n        //color config\n\n        $mdThemingProvider.theme('default')\n            .primaryPalette('indigo')\n            .accentPalette('orange');        \n        var host;\n        if(window.location.hostname == \"babysitting-3329b.firebaseapp.com\"){\n            host = \"https://babysitting.herokuapp.com\"\n        } else{ host = \"http://localhost:8080\" }\n\n        $httpProvider.interceptors.push(function() {\n            return {\n                'request': function(config) {\n                    if (config.method == \"POST\" && config.api) {\n                        config.url = host + config.url;\n                    }\n                    return config;\n                }\n            }\n        })\n\n        //Default route\n        $urlRouterProvider.otherwise('/babysitters');\n\n        $stateProvider\n            .state('login', {\n                url: '/login',\n                templateUrl: 'pages/login.html',\n                data: {\n                    pageTitle: 'Login',\n                    guests: true,\n                    icon: \"vpn_key\"\n                },\n                controller: \"mainCtrl\"\n            })\n            .state('booking', {\n                url: '/booking/{uid}',\n                templateUrl: 'pages/booking.html',\n                data: {\n                    pageTitle: 'Booking',\n                    guests: false,\n                    hidden: true,\n                    icon: \"event_note\"\n                },\n                controller: 'bookingCtrl'\n            })\n            .state('babysitters', {\n                url: '/babysitters',\n                templateUrl: 'pages/babysitters.html',\n                data: {\n                    pageTitle: 'babysitters',\n                    guest: false,\n                    icon: 'people',\n                    parent: true\n                },\n                controller: 'babysittersCtrl'\n            })\n            .state('find', {\n                url: '/find',\n                templateUrl: 'pages/find.html',\n                data: {\n                    pageTitle: 'Find',\n                    guest: false,\n                    icon: 'search',\n                    parent: true\n                },\n                controller: 'findCtrl'\n            })\n            .state('register', {\n                //url: '/booking',\n                url: '/register',\n                templateUrl: 'pages/register.html',\n                replace: true,\n                data: {\n                    pageTitle: 'Register',\n                    guests: true,\n                    icon: \"create\"\n                },\n                params: {\n                    googleLogin: null\n                },\n                controller: 'registerCtrl'\n            })\n            .state('accountPage', {\n                url: '/account/{tab}',\n                templateUrl: 'pages/account.html',\n                data: {\n                    pageTitle: 'My Account',\n                    guests: false,\n                    icon: \"perm_identity\"\n                },\n                controller: 'accountCtrl'\n            })\n            .state('children', {\n                url: '/children/{edit}',\n                templateUrl: 'pages/children.html',\n                data: {\n                    pageTitle: 'My children',\n                    hidden: true,\n                    guests: false\n                },\n                controller: 'childrenCtrl'\n            })\n            .state('bookingDetails', {\n                url: '/booking/info/{id}',\n                templateUrl: 'pages/bookingDetails.html',\n                data: {\n                    pageTitle: 'Booking information',\n                    hidden: true,\n                    guests: false\n                },\n                controller: 'bookingDetails'\n            })\n            .state('about', {\n                url: '/about',\n                templateUrl: 'pages/about.html',\n                data: {\n                    pageTitle: 'About',\n                    guests: true,\n                    icon: \"info_outline\"\n                }\n            })\n    }\n]);\n\n\n\napp.run(['$rootScope', '$state', '$stateParams', '$firebaseObject', '$toast', '$firebaseAuth',\n    function($rootScope, $state, $stateParams, $firebaseObject, $toast, $firebaseAuth) {\n        $rootScope.$state = $state;\n        $rootScope.states = $state.get();\n        $rootScope.states.shift();\n        $rootScope.availableStates = $rootScope.states;\n        $rootScope.currentUserLoaded = false;\n        $rootScope.loggedIn = false;\n        $rootScope.authStateLoaded = false;\n        $rootScope.authData = {};\n        $rootScope.incompleteData = false;\n\n        var config = {\n            apiKey: \"AIzaSyDL6RudaDzBsZmbPMGwfrpKiErSOqVJjQk\",\n            authDomain: \"babysitting-3329b.firebaseapp.com\",\n            databaseURL: \"https://babysitting-3329b.firebaseio.com\",\n            storageBucket: \"babysitting-3329b.appspot.com\",\n        };\n        firebase.initializeApp(config);\n\n        $rootScope.authObj = $firebaseAuth();\n\n        $rootScope.authObj.$onAuthStateChanged(function(user) {\n            $rootScope.authStateLoaded = true;\n            if (user) {\n                $rootScope.loggedIn = true;\n                $rootScope.authData = JSON.parse(JSON.stringify(user));\n                console.log(\"auth data is\");\n                console.log($rootScope.authData);\n                // if($rootScope.$state.current.name == \"login\"){ $state.go('babysitters') }\n            } else {\n                $rootScope.loggedIn = false;\n                $state.go('login')\n            }\n        });\n\n        /*if(!firebase.auth().currentUser){\n            $rootScope.authStateLoaded = true;\n        }*/\n\n        // Default rates & groups\n        $rootScope.defaultAgeGroups = [{\n            codename: 'A',\n            description: 'Age group 1 - 2',\n            rate: 5\n        }, {\n            codename: 'B',\n            description: 'Age group 2 - 5',\n            rate: 5\n        }, {\n            codename: 'C',\n            description: 'Age group 5 - 8',\n            rate: 5\n        }, {\n            codename: 'D',\n            description: 'Age group 8 - 12',\n            rate: 5\n        }, {\n            codename: 'E',\n            description: 'Age group 12 - 16',\n            rate: 5\n        }];\n\n        $rootScope.days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        // Default work hours\n        $rootScope.defaultWorkHours = [];\n        for (var i = 0; i < 7; i++) {\n            // Start time 25200000 = 7 AM , end time 72000000 = 8 PM which equates to the default time\n            $rootScope.defaultWorkHours.push({\n                name: $rootScope.days[i],\n                startTime: 25200000,\n                endTime: 72000000\n            })\n        };\n\n\n        $rootScope.database = firebase.database().ref();\n        window['database'] = $rootScope.database;\n        $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams, options) {\n            if ($rootScope.navOpen) {\n                $rootScope.slideAway();\n            }\n            if (toState.name == 'booking' && !toParams.uid) {\n                event.preventDefault();\n                $toast('Please choose a babysitter first');\n                $state.go('babysitters');\n            }\n            if (toState.name == 'login' && $rootScope.loggedIn && !toParams.googleLogin) {\n                event.preventDefault();\n                $state.go('babysitters');\n            }\n            if ($rootScope.authStateLoaded) {\n                if (!toState.data.guests && !$rootScope.loggedIn) {\n                    event.preventDefault();\n                    $state.go('login');\n                    $toast('Please Login First');\n                }\n            }  \n            console.log('$rootScope.incompleteData ', $rootScope.incompleteData );\n            if($rootScope.incompleteData && !toState.data.guests && toState !== \"register\"){\n                event.preventDefault();\n                $toast(\"Please finish registeration\");\n            }\n            \n        })\n\n\n        //firebase.auth().currentUser ? \n\n        $rootScope.$watch('loggedIn', function() {\n\n            if ($rootScope.loggedIn) {\n                $rootScope.availableStates = $rootScope.states.filter(function(state) {\n                    return !state.data.guests && !state.data.hidden;\n                });\n                $rootScope.fetchUserData(firebase.auth().currentUser.uid);\n            } else {\n                $rootScope.availableStates = $rootScope.states.filter(function(state) {\n                    return state.data.guests\n                });\n            }\n        });\n\n        $rootScope.fetchUserData = function(uid) {\n            $rootScope.currentUser = $firebaseObject($rootScope.database.child('users/' + uid));\n\n            $rootScope.currentUser.$loaded()\n                .then(function() {\n                    $rootScope.currentUserLoaded = true;\n                    if($rootScope.currentUser.$value === null){\n                        $rootScope.incompleteData = true;\n                        console.log(\"empty data\");\n                        $toast(\"Please finish registeration\");\n                        $state.go(\"register\");\n                    }                    \n                })\n            $rootScope.currentUser.$watch(function(){\n                if($rootScope.currentUser.$value !== null) $rootScope.incompleteData = false;\n            })    \n        }\n\n\n    }\n]);","app.controller('accountCtrl', ['$scope', '$rootScope', '$toast', '$state', '$stateParams', '$firebaseArray', '$firebaseObject',\n    function($scope, $rootScope, $toast, $state, $stateParams, $firebaseArray, $firebaseObject) {\n    $scope.children = [];\n    $scope.zeroChildren = false;\n    $scope.childrenLoaded = false;\n    $scope.currentUserLoaded = false;\n    $scope.bookingsLoaded = false;\n    $scope.user = {};\n    $scope.pages = {\n        parent: 'pages/parent.html',\n        babysitter: 'pages/babysitter.html',\n        personal: 'pages/personalInfo.html'\n    }\n    $scope.invalidPricingForm = false;\n    $scope.pricingLoaded = false;\n    $scope.pricingForm = [];\n    $scope.ageGroups = {};\n    $scope.workHours = [];\n    $scope.bookings = [];\n    $scope.emptyBookings = false;\n\n    // For the select menus of the drop down menu of work hours \n    $scope.times = [];\n    for (var i = 0; i <= 48; i++) {\n        var time = {\n            \"ms\": 1800000 * i,\n            \"format\": moment().startOf('day').add(30 * i, 'm').format(\"hh:mm A\")\n        }\n        $scope.times.push(time);\n    }\n\n    if($stateParams.tab == 'parent'){\n        $scope.parentTab = true;\n    }\n\n    $rootScope.$watch('currentUserLoaded', function() {\n        if ($rootScope.currentUser) {\n            $scope.currentUserLoaded = true;\n            var uid = $rootScope.currentUser.$id;\n            // Needed info to show edit-able data\n            $scope.user = {\n                name: $rootScope.currentUser.name,\n                locationCity: $rootScope.currentUser.locationCity,\n                zipCode: $rootScope.currentUser.zipCode,\n                street: $rootScope.currentUser.street\n            }\n\n            $scope.userTypes = [{\n                \"icon\": \"person\",\n                \"description\": \"parent\",\n                \"model\": angular.copy($rootScope.currentUser.userType.parent)\n            }, {\n                \"icon\": \"child_friendly\",\n                \"description\": \"babysitter\",\n                \"model\": angular.copy($rootScope.currentUser.userType.babySitter)\n            }]\n            \n            $scope.workHours = angular.copy($rootScope.currentUser.workHours);\n\n            $scope.updatePricing(uid);\n\n            $scope.children = $firebaseArray($scope.database.child('users/' + uid + '/children'));\n            $scope.children.$loaded()\n                .then(function(data) {\n                    $scope.childrenLoaded = true;\n                    data.length == 0 ? $scope.zeroChildren = true : $scope.zeroChildren = false;\n                })\n            $scope.children.$watch(function(){\n                $scope.children.length == 0 ? $scope.zeroChildren = true : $scope.zeroChildren = false;\n            })\n\n            $scope.bookings = $firebaseObject($scope.database.child('bookingStatus/' + uid));\n            $scope.bookings.$loaded()\n                .then(function(data){\n                    console.log(data.$value);\n                    console.log(data);\n                    $scope.bookingsLoaded = true;\n                    if(data.$value === null || data.$value !== undefined) $scope.emptyBookings = true;\n                    console.log($scope.emptyBookings);\n                }).catch(function(err){ console.error(err) })\n        }\n    });\n\n    $scope.updatePricing = function(uid) {\n        $scope.database.child('babysitters/' + uid + '/pricing').once('value')\n            .then(function(data) {\n                if (!data.val()) {$scope.ageGroups = angular.copy($rootScope.defaultAgeGroups);}\n                    else{\n                \t   $scope.ageGroups = data.val();\n                    }\n                $scope.pricingLoaded = true;\n                $scope.$apply();\n            })\n            .catch(function(err) {\n                console.error(err);\n            })\n    }\n    \n    $scope.workHours = angular.copy($rootScope.defaultWorkHours);\n\n    /*$scope.updateHours = function(uid){\n        $scope.database.child('babysitters/' + uid + '/workHours').once('value')\n            .then(function(data){\n                if(!data.val()){ $scope.workHours = angular.copy($rootScope.defaultWorkHours)}\n                    else{\n                        $scope.workHours = data.val();\n                    }\n                console.log(data);\n            }).catch(function(err){\n                console.error(err);\n            });\n    }*/\n\n\n    $scope.deleteChild = function(child) {\n        var index = $scope.children.indexOf(child);\n        console.log(child);\n        console.log(index);\n        $scope.children.$remove(index)\n            .then(function() {\n                console.log(\"item removed\");\n                $toast(child.name + \" removed\");\n            });\n        console.log($scope.children);\n        if ($scope.children.length == 0) {\n            $scope.zeroChildren = true;\n        }\n    }\n\n    $scope.updateProfile = function() {\n    \t// errors here, babysitter write is valid, probably something going wrong with the users write, check out online site for code comparsion\n    \tvar updateProfileData = {};\n        updateProfileData['users/' + $scope.currentUser.$id + '/name'] = $scope.user.name;\n        updateProfileData['users/' + $scope.currentUser.$id + '/locationCity'] = $scope.user.locationCity;\n        if($scope.currentUser.userType.parent){\n           updateProfileData['users/' + $scope.currentUser.$id + '/zipCode'] = $scope.user.zipCode;\n    \t   updateProfileData['users/' + $scope.currentUser.$id + '/street'] = $scope.user.street;\n        }else{\n           updateProfileData['babysitters/' + $scope.currentUser.$id + '/name'] = $scope.user.name;\n    \t   updateProfileData['babysitters/' + $scope.currentUser.$id + '/locationCity'] = $scope.user.locationCity;            \n        }\n\n    \tconsole.log(updateProfileData);\n        $scope.database.update(updateProfileData)\n            .then(function(data) {\n                console.log(data);\n            })\n            .catch(function(err) {\n                console.error(err);\n            })\n    }\n\n    $scope.updateUserType = function(type) {\n        var userPath = 'users/' + $scope.currentUser.$id;\n        var uid = $scope.currentUser.$id;\n\n        if (type.description === \"parent\") {\n            var updateParentData = {}\n            updateParentData[userPath + '/userType/parent'] = type.model;\n            if ($rootScope.currentUser.userType.parent) {\n                console.log('deleting children node');\n                updateParentData[userPath + '/children/'] = null;\n            }\n            $scope.database.update(updateParentData)\n                .then(function(data) {\n                    $toast('Successfully changed account');\n                    console.log(data);\n                })\n                .catch(function(err) {\n                    console.log(error);\n                })\n        }\n\n        if (type.description === 'babysitter') {\n            var updateBabySitterData = {};\n\n            updateBabySitterData[userPath + '/userType/babySitter'] = type.model;\n\n            if ($rootScope.currentUser.userType.babySitter) {\n                // The user is currently a babysitter, but does not want it anymore. Delete babysitter associated data\n                updateBabySitterData[userPath + \"/pricing\"] = null;\n                updateBabySitterData['babysitters/' + uid] = null;\n            } else {\n                // The user is not a babysitter, but wants to become one\n                updateBabySitterData['babysitters/' + uid] = {\n                    workHours: $rootScope.defaultWorkHours,\n                    pricing: $rootScope.defaultAgeGroups,\n                    photoURL: $scope.currentUser.photoURL,\n                    locationCity: $scope.currentUser.locationCity,\n                    birthDay: $scope.currentUser.birthDay,\n                    email: $scope.currentUser.email,\n                    name: $scope.currentUser.name\n                }\n\n                updateBabySitterData['users/' + uid + '/pricing'] = $rootScope.defaultAgeGroups;\n                \n                $scope.updatePricing(uid);\n            }\n\n            $scope.database.update(updateBabySitterData)\n                .then(function(data) {\n                    $toast('Successfully changed account');\n                    console.log(data);\n                })\n                .catch(function(err) {\n                    console.log(err);\n                })\n        }\n        console.log(type.model);\n        console.log($rootScope.currentUser.userType);\n    }\n\n    $scope.saveHours = function(){\n        var updateHoursData = {};\n        var uid = $rootScope.currentUser.$id;\n\n        console.log($scope.workHours);\n\n        $scope.workHoursToSave = $scope.workHours.map(function(obj){\n            delete obj['$$hashKey'];\n            return obj\n        });\n\n        updateHoursData['users/' + uid + '/workHours/'] = updateHoursData['babysitters/' + uid + '/workHours'] = $scope.workHoursToSave;\n        $scope.database.update(updateHoursData)\n            .then(function(data){\n                $toast(\"Hours updated\");\n            }).catch(function(err){\n                console.error(err);\n                $toast(\"Failed to update\");\n            })\n            \n    }\n\n    $scope.savePricing = function() {\n        var updatePricingData = {};\n        var uid = $rootScope.currentUser.$id;\n\n        $scope.ageGroupsToSave = $scope.ageGroups.map(function(obj) {\n            delete obj[\"$$hashKey\"];\n            return obj;\n        });\n        console.log($scope.ageGroupsToSave);\n\n        updatePricingData['users/' + uid + '/pricing/'] = updatePricingData['babysitters/' + uid + '/pricing/'] = $scope.ageGroupsToSave;\n        $scope.database.update(updatePricingData)\n            .then(function(data){\n                console.log(data);\n                $toast('Pricing updated');\n            }).catch(function(err){\n                console.error(err);\n                $toast(\"Failed to update\");\n            })\n            \n    }\n\n    $scope.checkForms = function() {\n        for (var i = 0; i < $scope.pricingForm.length; i++) {\n            if ($scope.pricingForm[i].$invalid) {\n                $scope.invalidPricingForm = true;\n                break;\n            } else { $scope.invalidPricingForm = false }\n        }\n    }\n\n    $scope.showBookingInformation = function(bookingID){\n        console.log(bookingID);\n        $state.go('bookingDetails', {id: bookingID});\n    }\n\n}]);","app.controller('babysittersCtrl', ['$scope', '$state', '$rootScope', '$toast', '$firebaseObject', '$mdDialog', '$anchorScroll',\n    function($scope, $state, $rootScope, $toast, $firebaseObject, $mdDialog, $anchorScroll) {\n\n        $scope.amount = 10;\n        $scope.babysittersLoaded = false;\n        $scope.noBabysitters = false;\n        $scope.max = false;\n\n        $scope.update = function(amount, scrollDown) {\n            $scope.babysittersLoaded = false;\n            var babysittersRef = $rootScope.database.child('babysitters/').limitToFirst(amount);\n            $scope.babysitters = $firebaseObject(babysittersRef);\n            $scope.babysitters.$loaded(function() {\n                $scope.babysittersLoaded = true;\n                if (scrollDown) {\n                    setTimeout(function() {\n                        window.scrollTo(0, document.body.scrollHeight);\n                    });                    \n                }\n                if ($scope.babysitters.$value === null){\n                    $scope.noBabysitters = true;    \n                }\n            })\n        }\n\n        $scope.update($scope.amount, false);\n\n        $scope.loadMore = function() {\n            if ($scope.amount > Object.keys($scope.babysitters).length - 3) {\n                $scope.max = true;\n                return;\n            }\n            $scope.amount += 15;\n            $scope.update($scope.amount, true);\n            console.log($scope.amount);\n        }\n\n        $scope.email = function(email) {\n            location.href = \"mailto:\" + email + \"?Subject=Regarding a booking\";\n        }\n\n        $scope.moreInfo = function(babysitter, key, event) {\n            console.log(babysitter);\n            $scope.uid = key;\n            $scope.babysitter = babysitter;\n            $mdDialog.show({\n                contentElement: '#babySitterDialog',\n                parent: angular.element(document.body),\n                targetEvent: event,\n                clickOutsideToClose: true,\n                bindToController: true,\n                fullscreen: true\n            });\n        };\n\n        $scope.calculateAge = function(birthday) {\n            return Math.abs(new Date(Date.now() - birthday).getUTCFullYear() - 1970);\n        }\n\n        $scope.closeDialog = function() {\n            $mdDialog.hide();\n        }\n\n\n    }\n]);","app.controller('bookingCtrl', ['$scope', '$state', '$rootScope', '$toast', '$stateParams', '$mdDialog', '$firebaseObject', '$http',\n    function($scope, $state, $rootScope, $toast, $stateParams, $mdDialog, $firebaseObject, $http) {\n        // =============================================================================================\n        // Date stuff\n        // =============================================================================================\n        $scope.today = moment();\n        $scope.todayIndex = $scope.today.day();\n        $scope.currentWeek = true;\n        $scope.weekIndex = 0;\n        $scope.weekStat = {\n            startOfWeek: moment().startOf('week').format('D-M-Y'),\n            endOfWeek: moment().endOf('week').format('D-M-Y')\n        }\n        \n        $scope.dayObjects = [];\n        console.log($scope.todayIndex);\n        $scope.weekIsFree = false;\n        $scope.startTime = null;\n        $scope.endTime = null;\n        $scope.selectedDay = null;\n        $scope.duration = null;\n        $scope.cost = 0;\n        $scope.selectedChildren = null;\n        $scope.bookingsLoaded = false;\n\n        /*\n            Fetch bookings for x week from the firebase database\n            @params number ms - pass epoch time of any date of desired week in milliseconds \n        */\n        $scope.fetchBookings = function(ms) {\n            $scope.bookingsLoaded = false;\n            var bookingsPath = $rootScope.database.child('availability/' + $stateParams.uid + \"/\" + moment(ms).startOf('week').valueOf());\n            $scope.bookings = $firebaseObject(bookingsPath)\n            $scope.bookings.$loaded(function() {\n                $scope.bookingsLoaded = true;\n            })\n        }\n\n        /*\n          Update the date, mainly for viewing current week & date purposes\n          @params {object} date - pass a moment object, can be any given date in a week.          \n        */\n        $scope.updateDate = function(date) {\n            $scope.weekNumber = date.format(\"w\");\n            if ($scope.weekIndex != 0) {\n                date.startOf('week');\n            }\n            $scope.dayOfMonth = date.format('D');\n            $scope.month = date.format('MMM');\n            $scope.dayOfWeek = date.format('dddd');\n            $scope.fetchBookings(date.valueOf());\n        }\n\n        $scope.updateDate($scope.today);\n\n\n\n        /*\n          Creates objects for x week, useful for navigating through weeks\n          @params {object} date - pass a moment object, can be any given date in a week.          \n        */\n        //console.log(`date is ${date} and type is ${typeof date}`);\n        $scope.createDays = function(date) {\n            $scope.updateDate(date);\n            for (var i = 0; i < 7; i++) {\n                day = date.startOf('week').add(i, 'days');\n                $scope.dayObjects[i] = {\n                    \"dayOfWeek\": day.format('dddd'),\n                    \"moment\": angular.copy(day),\n                    \"ms\": day.valueOf(),\n                    \"date\": day.format('D/MM')\n                };\n            }\n        }\n\n        $scope.createDays(moment());\n\n        console.log($scope.dayObjects);\n\n        $scope.$watch('weekIndex', function() {\n            if ($scope.weekIndex == 0) {\n                $scope.currentWeek = true;\n            }\n        });\n\n        $scope.nextWeek = function() {\n            // You can view 8 weeks this way, week with index of 7 will view you everything from\n            // The start of week 7 till the end of it.\n            if ($scope.weekIndex > 6) {\n                $scope.maxHistory = true;\n                return;\n            }\n            $scope.currentWeek = false;\n            $scope.weekIndex += 1;\n\n            $scope.createDays(moment().add($scope.weekIndex, 'weeks'));\n        }\n\n        $scope.previousWeek = function() {\n            if ($scope.weekIndex == 0) {\n                $scope.currentWeek = true;\n                return;\n            }\n            $scope.maxHistory = false;\n            // This will check which week is currently being viewed\n            $scope.currentTime = moment().add($scope.weekIndex, 'w');\n            // Will update the week index \n            $scope.weekIndex -= 1;\n            // Takes the currently viewed week and goes back one week\n            var difference = moment($scope.currentTime).subtract(1, 'w');\n            // Generates the proper days for the week we want to go back to \n            $scope.createDays(difference);\n            //console.log(`Current time is ${$scope.currentTime} and Weekindex is ${$scope.weekIndex}`);\n        }\n\n        //console.log($scope.todayIndex , today.format('D-M-Y'));\n        /*yesterday = moment().day()\n        Will return the index of the week with Sunday as 0 and Saturday as 6\n    \n        for creating past days in CURRENT week\n        Just create moment objects for every single day.\n        You check which day it is today, if its 3, you create a for loop \n        that creates 3 objects and increments a day everytime, you push every\n        object in a 'past array'\n        \n        you also have to create todays object and the upcoming days in that week.\n\n        for moving checking next weeks, you just create 7 new objects\n        how you will do that is currently unknown\n        */\n\n        // =============================================================================================\n\n        console.clear();\n        var babysitter = $rootScope.database.child('babysitters/' + $stateParams.uid);\n        $scope.babysitter = $firebaseObject(babysitter);\n        console.log($scope.babysitter);\n\n        $scope.babysitter.$loaded(function() {\n            console.log($scope.babysitter.workHours[0]);\n        })\n\n        $scope.updateAges = function() {\n            for (var i = 0; i < $scope.children.length; i++) {\n                var date = moment(new Date($scope.children[i].birthday));\n                var age = moment(date).fromNow(true);\n                $scope.children[i].age = age;\n            }\n        }\n\n        $scope.book = function(time, event) {\n            $scope.selectedDay = moment(time).format(\"MMMM D\");\n            $scope.createTimes(time);\n            console.log(time);\n            $mdDialog.show({\n                contentElement: '#bookDialog',\n                parent: angular.element(document.body),\n                targetEvent: event,\n                clickOutsideToClose: true,\n                fullscreen: true\n            });\n        };\n\n        /*\n          Create an array of objects for the dropdown\n          @params number - pass unix timestamp in seconds of the day you want to generate times for\n        */\n        $scope.createTimes = function(day) {\n            $scope.day = day;\n            $scope.times = [];\n            for (var i = 0; i <= 48; i++) {\n                var time = {\n                        \"ms\": moment(day).startOf('day').add(30 * i, 'm').valueOf(),\n                        \"format\": moment(day).startOf('day').add(30 * i, 'm').format(\"hh:mm A\"),\n                        \"moment\": moment(day).startOf('day').add(30 * i, 'm').format(\"hh:mm A\")\n                    }\n                    // This will disable already reserved days\n                for (key in $scope.bookings[day]) {\n                    if (time.ms >= $scope.bookings[day][key].startTime && time.ms <= $scope.bookings[day][key].endTime) {\n                        time['unavailable'] = true;\n                    }\n                }\n                //ms passed in that day for this time slot, useful to compare against busy hours\n                var msDay = time.ms - moment(day).startOf('day').valueOf();\n                // Index of day in week\n                var index = moment(day).day();\n\n                if (msDay < $scope.babysitter.workHours[index].startTime || msDay > $scope.babysitter.workHours[index].endTime) {\n                    time['unavailable'] = true;\n                }\n\n                $scope.times.push(time);\n            }\n            console.log($scope.times);\n        }\n\n        $scope.calcDuration = function() {\n            if ($scope.endTime == null || $scope.startTime == null) {\n                return;\n            }\n            var momentDuration = moment.duration($scope.endTime.ms - $scope.startTime.ms);\n            var hours = momentDuration.get('hours');\n            var minutes = momentDuration.get('minutes');\n            // Longer than an hour\n            if (hours >= 1) {\n                if (minutes > 0) {\n                    if (hours == 1) {\n                        $scope.duration = hours + \" hour and \" + minutes + \" minutes\";\n                    } else {\n                        $scope.duration = hours + \" hours and \" + minutes + \" minutes\";\n                    }\n                } else {\n                    if (hours == 1) {\n                        $scope.duration = hours + \" hour\";\n                    } else {\n                        $scope.duration = hours + \" hours\";\n                    }\n                }\n            } else {\n                $scope.duration = minutes + \" minutes\";\n            }\n            console.log($scope.duration);\n            $scope.calcCost();\n        }\n\n\n        $scope.calcCost = function() {\n            if ($scope.selectedChildren == null) {\n                return;\n            }\n            $scope.cost = 0;\n            // Determine in which age group each child falls\n            for (var i = 0; i < $scope.selectedChildren.length; i++) {\n                var age = moment().diff(moment($scope.selectedChildren[i].birthday), 'years');\n                switch (true) {\n                    case (age > 0 && age < 3):\n                        //Childs age 1 to 2 = a\n                        $scope.cost += $scope.babysitter.pricing[0].rate\n                        break;\n                    case (age > 1 && age < 6):\n                        //Childs age 2 to 5 = b\n                        $scope.cost += $scope.babysitter.pricing[1].rate\n                        break;\n                    case (age > 4 && age < 9):\n                        //Childs age 5 to 8 = c\n                        $scope.cost += $scope.babysitter.pricing[2].rate\n                        break;\n                    case (age > 7 && age < 13):\n                        //Childs age 8 to 12 = d\n                        $scope.cost += $scope.babysitter.pricing[3].rate\n                        break;\n                    case (age > 12):\n                        //Childs age 12 + = e\n                        $scope.cost += $scope.babysitter.pricing[4].rate\n                        break;\n                }\n            }\n            // At this point, we know how much the booking would cost if it would be an hour,\n            // $scope.cost = total of the booking if it would be one hour\n            $scope.cost = ($scope.cost * ($scope.endTime.ms - $scope.startTime.ms)) / 3600000;\n            $scope.babysitter.pricing;\n        }\n\n\n\n        $scope.closeDialog = function() {\n            $mdDialog.hide()\n                .then(function() {\n                    $scope.startTime = null;\n                    $scope.endTime = null;\n                    $scope.duration = null;\n                    $scope.cost = 0;\n                    $scope.selectedChildren = null;\n                })\n        }\n\n        $scope.confirmBooking = function() {\n            // // Testing\n\n            // // Week of booking in MS, for showing the bookings later in the UI\n            // var weekMS = moment($scope.startTime.ms).startOf('week').valueOf();\n            // //Day of booking in MS, for showing the booking later in the ui as well\n            // var dayMS = moment($scope.startTime.ms).startOf('day').valueOf();\n\n            // $rootScope.database.child('availability/' + $stateParams.uid + '/' + weekMS + '/' + dayMS)\n            //     .push({\n            //         \"startTime\": $scope.startTime.ms,\n            //         \"endTime\": $scope.endTime.ms\n            //     })\n            //     .then(function(data) {\n            //         console.log('push successfull');\n            //         console.log(data);\n            //     }).catch(function(err) {\n            //         console.error(err);\n            //     })\n\n\n            // return;\n            // // Testing end\n\n            $http({\n                method: 'POST',\n                url: '/booking/create',\n                api: true,\n                data: {\n                    startTime: $scope.startTime.ms,\n                    endTime: $scope.endTime.ms,\n                    day: $scope.day,\n                    parent: {\n                        id: $scope.currentUser.$id,\n                        street: $scope.currentUser.street,\n                        zipcode: $scope.currentUser.zipCode,\n                        children: $scope.selectedChildren,\n                        email: $scope.currentUser.email,\n                        name: $scope.currentUser.name\n                    },\n                    babysitter: {\n                        id: $stateParams.uid,\n                        email: $scope.babysitter.email,\n                        name: $scope.babysitter.name\n                    }\n                }\n            }).then(function(data) {\n                console.log(data);\n                $toast('Booking successful');\n                $scope.closeDialog();\n            }).catch(function(err) {\n                $scope.closeDialog();\n                $toast('Server error');\n                console.error(err);\n            });\n        }\n\n    }\n])","app.controller('bookingDetails', \n\t['$scope', '$state', '$rootScope', '$toast', '$firebaseObject', '$stateParams', '$mdDialog', '$http',\n\tfunction($scope, $state, $rootScope, $toast, $firebaseObject, $stateParams, $mdDialog, $http){\n\t    $scope.bookingLoaded = false;\n\t\t$scope.companyEmail;\n\t\t\t\n\t\t$scope.calculateAge = function(birthday) {\n        \treturn Math.abs(new Date(Date.now() - birthday).getUTCFullYear() - 1970);\n    \t}\n\n\t\t $rootScope.$watch('currentUserLoaded', function() {\n        \tif ($rootScope.currentUser) {\n          \t\tvar bookingDetails = $rootScope.database.child('bookingStatus/' + $rootScope.currentUser.$id + \"/\" + $stateParams.id)\n          \t\t$scope.booking = $firebaseObject(bookingDetails);\n\n          \t\t$scope.booking.$loaded()\n\t          \t\t.then(function(data){\n\t                    $scope.bookingLoaded = true;\n\t                    if(data.$value === null) {\n\t                    \t$toast(\"Booking not found\");\n\t                    \t$state.go(\"accountPage\")\n\t                    }\n\t                }).catch(function(err){ console.error(err) })\n        \t}\n    \t});\n\n\t\t $scope.report = function(event){\n\t\t \t$rootScope.database.child('company/email').once('value')\n\t\t\t\t.then(function(data){\n\t\t\t\t\t$scope.companyEmail = data.val()\n\t\t\t\t}).catch(function(err){\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t});\n\t\t \t$mdDialog.show({\n                contentElement: '#reportDialog',\n                parent: angular.element(document.body),\n                targetEvent: event,\n                clickOutsideToClose: true,\n            });\n\t\t }\n\n\t\t $scope.closeDialog = function(){\n\t\t\t$mdDialog.hide();\n\t\t }\n\n\t\t $scope.cancelBooking = function(ev){\n\t\t \t // Appending dialog to document.body to cover sidenav in docs app\n\t\t\tvar confirm = $mdDialog.confirm()\n\t\t\t      .title('Are you sure?')\n\t\t\t      .textContent('This will cancel the booking')\n\t\t\t      .ariaLabel('Cancel booking')\n\t\t\t      .targetEvent(ev)\n\t\t\t      .ok(\"Cancel booking\")\n\t\t\t      .cancel(\"Don't cancel booking\");\n\n\t\t\t$mdDialog.show(confirm).then(function() {\n\t\t\t\t  $http({\n\t\t\t \t\tmethod: 'POST',\n\t\t            url: '/booking/cancel',\n\t\t            api: true,\n\t\t            data: {\n\t\t            \tbookingID    : $scope.booking.$id,\n\t\t            \tparentID     : $scope.booking.parent.id,\n\t\t            \tbabysitterID : $scope.booking.babysitter.id\n\t\t            }\n\t\t\t\t })\n\t\t\t}, function() {});\n\t\t\t \n\t\t }\n\n}]);\n\t","app.controller('childrenCtrl', ['$scope', '$rootScope', '$toast', '$state', '$firebaseArray','$stateParams', '$timeout', function($scope, $rootScope, $toast, $state, $firebaseArray, $stateParams, $timeout){\n\t\t$scope.children = [{birthday: null, name: null}];\n\t\t$scope.emptyChildren = true;\n\t\t$scope.maxChildren = false;   \n\t\t$scope.remoteChildrenLoaded = false;\n\t\t$scope.remoteChildren = [];\n\t\t$scope.editMode = false;\n\t\tconsole.log($stateParams.edit);\n\t\tif($stateParams.edit === \"true\"){\n\t\t\tconsole.log($stateParams.edit);\n\t\t\t$scope.editMode = true;\n\t\t\t$scope.children = [];\n\t\t}\n\n\t\t// Child max age\n\t\tvar maxAge = moment.duration(16, 'years');\t\t\n\t\t$scope.minDate = moment().subtract(maxAge, 'years').toDate();\n\t\t$scope.maxDate = moment().subtract(1, 'years').toDate();\n\n\t\t$rootScope.$watch('currentUserLoaded', function(){\n\t\t\tconsole.log($rootScope.currentUser);\n\t\t\tif($rootScope.currentUser !== undefined){\n\t\t\t\tvar uid = $rootScope.currentUser.$id;\n\t\t\t\t$scope.remoteChildren = $firebaseArray($scope.database.child('users/' + uid + '/children'));\n\t\t\t\t$scope.remoteChildren.$loaded(function(){\n\t\t\t\t\t$scope.remoteChildrenLoaded = true;\n\t\t\t\t\tif($scope.editMode){\n\t\t\t\t\t\tconsole.info('loading server data');\n\t\t\t\t\t\tfor(var i = 0; i < $scope.remoteChildren.length; i++){\n\t\t\t\t\t\t\tconsole.log($scope.remoteChildren[i]);\n\t\t\t\t\t\t\t$scope.toPushChild = angular.copy($scope.remoteChildren[i]);\n\t\t\t\t\t\t\t$scope.toPushChild.birthday = new Date($scope.toPushChild.birthday);\n\t\t\t\t\t\t\t$scope.children.push($scope.toPushChild);\n\t\t\t\t\t\t\t$scope.updateAges();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t})\n\t\t\t\t$scope.remoteChildren.$watch(function(e){\n\t\t\t\t\tconsole.log($scope.remoteChildren.length);\n\t\t\t\t\tif($scope.remoteChildren.length + $scope.children.length >= 3){\n\t\t\t\t\t\t$scope.maxChildren = true;\t\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\n\t\t/*Wrapped in a function because the collection will be checked once the controller is fired up, and at that point the children\n\t\tArray doesn't exist so this code would cause errors.*/\n\n\t\t$scope.$watchCollection('children', function(){\n\t\t\t$scope.emptyChildren = false;\n\t\t\tif($scope.children.length > 2){\n\t\t\t\t$scope.maxChildren = true;\n\t\t\t}\t\t\t\t\n\t\t\tif($scope.children.length == 0 && $scope.remoteChildren.length == 0){\n\t\t\t\t$scope.emptyChildren = true;\n\t\t\t}\t\t\t\n\t\t\tif($scope.remoteChildren.length + $scope.children.length >= 3){\n\t\t\t\t$scope.maxChildren = true;\t\n\t\t\t}\n\t\t});\n\n\t\t$scope.updateAges = function(){\n\t\t\tfor (var i = 0; i < $scope.children.length; i++) {\n\t\t\t\tvar date = moment(new Date($scope.children[i].birthday));\n\t\t\t\tvar age = moment(date).fromNow(true);\n\t\t\t\t$scope.children[i].age = age;\n\t\t\t}\n\t\t}\n\n\t\t$scope.addChildForm = function(){\n\t\t\t$scope.children.push({birthday: null, name: null});\n\t\t}\n\n\t\t$scope.removeChild = function(child){\n\t\t\tvar index = $scope.children.indexOf(child);\n\t\t\t$scope.children.splice(index,1);\n\t\t\t$scope.maxChildren = false;\n\t\t\t$scope.remoteChildren.$remove(index)\n\t\t\t\t.then(function(){\n\t\t\t\t\tconsole.log(\"item removed\");\n\t\t\t\t\t$toast(child.name + \" removed\");\n\t\t\t\t})\n\t\t}\n\t\t$scope.saveChild = function(child){\n\t\t\tconsole.log(child);\n\t\t\t$scope.database.child('users/' + $rootScope.currentUser.$id + '/children/' + child.$id).update({\n\t\t\t\tname: child.name,\n\t\t\t\tbirthday: child.birthday.getTime()\n\t\t\t}).then(function(data){\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t$toast('Child edited');\n\t\t\t\t})\n\t\t\t\t.catch(function(err){\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t$toast('Child editing failed');\n\t\t\t\t});\n\t\t}\n\n\t\t$scope.addChild = function(child, $event, index){\n\t\t\tconsole.group('adding child');\n\t\t\tif($scope.remoteChildren.length >= 3){\n\t\t\t\t$toast('You already have 3 children');\n\t\t\t\t$scope.maxChildren = true;\n\t\t\t}else{\n\t\t\t\t$scope.remoteChildren.$add({\n\t\t\t\t\tname: child.name,\n\t\t\t\t\tbirthday: child.birthday.getTime()\n\t\t\t\t}).then(function(data){\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t$toast(child.name + \" added\");\n\t\t\t\t}).catch(function(err){\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t$toast('Adding child failed');\n\t\t\t\t})\n\t\t\t}\n\n\t\t}\n}])","app.controller('findCtrl', ['$scope', '$state', '$rootScope', '$toast', '$firebaseObject', '$mdDialog', '$http',\n    function($scope, $state, $rootScope, $toast, $firebaseObject, $mdDialog, $http) {\n        $scope.date = null;\n        $scope.today = new Date();\n        // Max of bookings up to 8 weeks\n        $scope.maxDate = moment().add(8, 'weeks').toDate();\n        $scope.endTime = null;\n        $scope.startTime = null;\n        $scope.selectedChildren = {};\n        $scope.matches = [];\n        $scope.hideForm = false;\n        $scope.zeroChildren = true;\n\n        $rootScope.database.child('company/phoneNumber').once(\"value\")\n        .then(function(data){\n             $scope.phonenumber = data.val()\n        })\n        \n        $rootScope.$watch('currentUserLoaded', function(){ \n            if($rootScope.currentUserLoaded){\n                if($rootScope.currentUser.children){\n                    $scope.zeroChildren = false;\n                }\n            }\n        });\n        \n\n        $scope.times = [];\n        for (var i = 0; i <= 48; i++) {\n            var time = {\n                \"ms\": 1800000 * i,\n                \"format\": moment().startOf('day').add(30 * i, 'm').format(\"hh:mm A\")\n            }\n            $scope.times.push(time);\n        }\n\n        $scope.reset = function(){\n            $scope.matches = [];\n            $scope.hideForm = false;\n        }\n\n        $scope.calcCost = function(pricing) {\n            if(!pricing) { return }\n            var cost = 0;\n            // Determine in which age group each child falls\n            for (var i = 0; i < $scope.selectedChildren.length; i++) {\n                var age = moment().diff(moment($scope.selectedChildren[i].birthday), 'years');\n                switch (true) {\n                    case (age > 0 && age < 3):\n                        //Childs age 1 to 2 = a\n                        cost += pricing[0].rate\n                        break;\n                    case (age > 1 && age < 6):\n                        //Childs age 2 to 5 = b\n                        cost += pricing[1].rate\n                        break;\n                    case (age > 4 && age < 9):\n                        //Childs age 5 to 8 = c\n                        cost += pricing[2].rate\n                        break;\n                    case (age > 7 && age < 13):\n                        //Childs age 8 to 12 = d\n                        cost += pricing[3].rate\n                        break;\n                    case (age > 12):\n                        //Childs age 12 + = e\n                        cost += pricing[4].rate\n                        break;\n                }\n            }\n            cost = (cost * ($scope.endTime.ms - $scope.startTime.ms)) / 3600000;\n            return cost;\n        }\n\n        $scope.find = function() {\n            $scope.searching = true;\n            var data = {\n                \"date\": 1479596400000,\n                \"startTime\": 21600000, // 6 am\n                \"endTime\": 28800000 // 8 am\n            }\n            $http({\n                method: 'POST',\n                url: '/find',\n                api: true,\n                //timeout: 20000, // Request is taking too long\n                data: {\n                    \"startTime\": $scope.startTime.ms,\n                    \"endTime\": $scope.endTime.ms,\n                    \"date\": $scope.date.getTime()\n                }\n            }).then(function(res) {\n                console.log(res);\n                $scope.searching = false;\n                $scope.hideForm = true;\n                $scope.matches = res.data;\n            }).catch(function(err) {\n                $mdDialog.show(\n                    $mdDialog.alert()\n                    .clickOutsideToClose(true)\n                    .title('Cannot find a babysitter')\n                    .textContent('Please call us instead at ' + $scope.phonenumber)\n                    .ariaLabel('Cannot find a babysitter')\n                    .ok('Ok')\n                );\n                $scope.searching = false;\n            });\n        }\n\n        /*Will create a booking\n        @ params - babysitter: {id: uid, email: babysitter.email, name: babysitter.name}\n        */\n        $scope.book = function(babysitter) {\n            // console.log(babysitter);\n            // return;\n            $http({\n                method: 'POST',\n                url: '/booking/create',\n                api: true,\n                data: {\n                    startTime: moment($scope.date.getTime()).add($scope.startTime.ms, 'ms').valueOf(),\n                    endTime: moment($scope.date.getTime()).add($scope.endTime.ms, 'ms').valueOf(),\n                    day: $scope.date.getTime(),\n                    parent: {\n                        id: $scope.currentUser.$id,\n                        street: $scope.currentUser.street,\n                        zipcode: $scope.currentUser.zipCode,\n                        children: $scope.selectedChildren,\n                        email: $scope.currentUser.email,\n                        name: $scope.currentUser.name\n                    },\n                    babysitter: {\n                        id: babysitter.uid,\n                        email: babysitter.email,\n                        name: babysitter.name\n                    }\n                }\n            }).then(function(data) {\n                console.log(data);\n                // To do show alert an email is going to be sent\n                $mdDialog.show(\n                    $mdDialog.alert()\n                    .clickOutsideToClose(true)\n                    .title('Booking successful')\n                    .textContent('An email is sent with further details.')\n                    .ariaLabel('Booking successful')\n                    .ok('Ok')\n                );\n            }).catch(function(err) {\n                $toast('Booking failed');\n                console.error(err);\n            });\n        }\n\n    }\n]);","app.controller('mainCtrl', ['$scope', '$state', '$rootScope', '$toast', '$firebaseAuth', '$firebaseObject', '$mdDialog',\n\t\tfunction($scope, $state, $rootScope, $toast, $firebaseAuth, $firebaseObject, $mdDialog){\n\t    $scope.state = $state;\n\t    $scope.user = {};\t    \n\t    $rootScope.navOpen = false;\n\t    $scope.navTapped = false;\n\t    $scope.auth = $firebaseAuth();\n\t    \n\t\t//var provider = new firebase.auth.GoogleAuthProvider();\t\n\n\t\t$rootScope.slideAway = function(){\n\t\t\tdocument.querySelector('#sideNav').className = \"mobile\";\n            document.querySelector('#overlay').className = \"mobile fadeOut\";\n            setTimeout(function(){\n              document.querySelector('#overlay').className = \"mobile\";      \n            }, 300);     \n\t\t}\n\n\t\t$scope.toggleNav = function(){\t\t\t\n\t\t\tsetTimeout(function(){\n\t\t\t\t$scope.navTapped = false;\n\t\t\t}, 300);\n\t\t\tif($scope.navTapped){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(!$rootScope.navOpen){\n\t\t\t\t document.querySelector('#sideNav').className += \" show\";  \n           \t\t document.querySelector('#overlay').className += \" show\";\n\t\t\t}else{\n                $scope.slideAway();           \n\t\t\t}\n\t\t\t$rootScope.navOpen = !$rootScope.navOpen;\n\t\t\t$scope.navTapped = true;\n\t\t}\t\n\n\n\t\t$scope.signInWithGoogle = function(){\n\t\t\tvar provider = new firebase.auth.GoogleAuthProvider();\n\n\t\t\tfirebase.auth().signInWithPopup(provider)\n\t\t\t\t.then(function(data) {\n\t\t\t\t  return $scope.database.child('users/' + data.user.uid).once('value')\n\t\t\t\t})\n\t\t\t\t.then(function(data){\n\t\t\t\t\tconsole.log(data.val());\n\t\t\t\t\tif(data.val() == null){\n\t\t\t\t\t\t$toast('Please Register First');\n\t\t\t\t\t\t$state.go('register', {\"googleLogin\": true});\n\t\t\t\t\t}else{\n\t\t\t\t\t\t$state.go('accountPage');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(function(error) {\n\t\t\t\t  \t$toast('Google Login Failed');\n\t\t\t\t  \tconsole.log(error);\n\t\t\t\t});\n\t\t}\n\n\t\t$scope.forgotPassword = function(){\n\t\t\t$mdDialog.show({\n                contentElement: '#forgotPassword',\n                parent: angular.element(document.body),\n                targetEvent: event,\n                clickOutsideToClose: true,\n                fullscreen: true\n            });\n\t\t}\n\n\t\t$scope.requestResetLink = function(){\n\t\t\tfirebase.auth().sendPasswordResetEmail($scope.user.email)\t\n\t\t\t\t.then(function(data){\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t$toast(\"Password reset link sent\");\t\t\t\t\t\n\t\t\t\t}).catch(function(err){\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t$toast(\"Password reset link not sent\");\n\t\t\t\t});\n\t\t\t$mdDialog.hide();\n\t\t}\n\t\t$scope.closeDialog = function(){\n\t\t\t$mdDialog.hide();\n\t\t}\n\n\t\t//https://github.com/firebase/angularfire/blob/master/docs/reference.md#firebaseauth\n\t\t$scope.login = function(){\n\t\t\tfirebase.auth().signInWithEmailAndPassword($scope.user.email, $scope.user.password)\n\t\t\t\t.then(function(data){\n\t\t\t\t\t$rootScope.authStateLoaded = false;\n\t\t\t\t\t$scope.fetchUserData(data.uid);\n\t\t\t\t\t// Go to choice screen, see notes.md for reference \n\t\t\t\t\t$state.go('babysitters');\n\t\t\t\t \t$toast('Welcome!');\n\t\t\t    })\n\t\t\t\t.catch(function(err){\n\t\t\t\t\tconsole.log(\"error\", err);\n\t\t\t\t\tif(err.code == 'auth/user-not-found'){\n\t\t\t\t\t $toast('Unrecognized email');\n\t\t\t\t\t}\n\t\t\t\t\tif(err.code == 'auth/wrong-password'){\t\t\t\t\t\t\n\t\t\t\t\t $toast('Wrong password');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t}\n\t\t$scope.logout = function(){\n\t\t\tfirebase.auth().signOut().then(function() {\n\t\t\t   $rootScope.loggedIn = false;\n\t\t   \t   window.location.reload();\n\t\t\t   $toast('Logged out!');\t\t\t    \n\t\t\t}, function(error) {\n\t\t\t   $toast('Logout failed!');\t\t\t    \n\t\t\t});\n\t\t}\n\n\n\t}])","app.controller('registerCtrl', ['$scope', '$state', '$rootScope', '$toast', '$stateParams', '$mdDialog' ,\n\tfunction($scope, $state, $rootScope, $toast, $stateParams, $mdDialog){\n\t\t$scope.user = {\n\t\t\tphotoURL: 'https://i.gyazo.com/7fe293e6af9d0bc2dd9fe105679b21e1.png',\n\t\t\tpassword: null,\n\t\t\tpasswordRepeat: null\n\t\t};\n\t\t$scope.user.userType = {\n\t\t\tparent: false,\n\t\t\tbabySitter: false\n\t\t};\n\t\t//fb = firebase.auth().currentUser.providerData[0].providerId;\n\t\t$rootScope.$watch('loggedIn', function(){\n\t\t\tconsole.log('$rootScope.authData', $rootScope.authData);\n\t\t\tif($rootScope.loggedIn){\n\t\t\t\tif($rootScope.authData.providerData[0].providerId == 'google.com'){\n\t\t\t\t\t$scope.filledLoggedInGoogleData();\n\t\t\t\t}\t\n\t\t\t}\n\t\t})\n\t\tconsole.log(\"google login \", $stateParams.googleLogin);\n\t\tconsole.log('$rootScope.loggedIn ', $rootScope.loggedIn);\n\t\t$scope.filledLoggedInGoogleData = function(){\n\t\t\tif($stateParams.googleLogin || $rootScope.loggedIn === true){\n\t\t\t\tconsole.log(\"running logged in code\");\n\t\t\t\t$scope.passwordChecked = true;\n\t\t\t\t$scope.googleLoginFinished = true;\n\t\t\t\tvar user = firebase.auth().currentUser;\n\t\t\t\t$scope.user.name = user.displayName;\n\t\t\t\t$scope.user.uid = user.uid;\n\t\t\t\t$scope.user.photoURL = user.photoURL;\n\t\t\t\t$scope.user.email = user.email;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t$scope.birthDay = null;\n\t\t// Users must be at least 18 year old\n\t\tvar minAge = moment.duration(18, 'years');\n\t\t// Today minus 18 years\n\t\t$scope.maxDate = moment().subtract(minAge).toDate();\n\t\t// $scope.maxDate = new Date(1009839600000);\n\t\t$scope.passwordChecked = false;\n\t\t\n\t\t$scope.reDoLoginInfo = function(){\n\t\t\t$scope.passwordChecked = false;\n\t\t\t$scope.user.password = \"\";\n\t\t\t$scope.user.passwordRepeat = \"\";\n\t\t}\n\n\t\t$scope.checkPassword = function(){\n\t\t\tif($scope.user.password.length >= 7 && $scope.user.password === $scope.user.passwordRepeat){\n\t\t\t\t$scope.passwordChecked = true;\n\t\t\t}else{\n\t\t\t\t$scope.passwordChecked = false;\n\t\t\t}\n\t\t}\n\n\t\t$scope.signUpWithEmail = function(){\n\t\t\t$scope.withEmail = true;\n\t\t\t$scope.chosen = true;\n\t\t}\n\n\t\t$scope.check = function(){\n\t\t\t\n\t\t}\t\t\n\n\n\t\t$scope.checkCheckbox = function(){\n\t\t\tif($scope.user.userType.parent || $scope.user.userType.babySitter ){\n\t\t\t\t$scope.userChosen = true;\n\t\t\t}\n\t\t}\n\n\t\t/*\t\n\t\t\tRegistering a user function\n\t\t\t@params googleLogin - boolean - specifies if its a google login or not\n\t\t*/\n\t\t$scope.register = function(){\n\t\t\tif($scope.googleLoginFinished){\n\t\t\t\t$scope.registerInDatabase($scope.user.uid);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tif($scope.user.password !== $scope.user.passwordRepeat){\n\t\t\t   $toast(\"Passwords don't match\");\n\t\t\t  \treturn;\n\t\t\t}\n\t\t\t// Register -> Programmatically login -> set data in database by calling the function\n\n\t\t\tfirebase.auth().createUserWithEmailAndPassword($scope.user.email, $scope.user.password)\n\t\t\t.then(function(data){\n\t\t\t\tconsole.log(data)\n\t\t\t\tfirebase.auth().signInWithEmailAndPassword($scope.user.email, $scope.user.password)\n\t\t\t\t.then(function(data){\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t$scope.registerInDatabase(data.uid);\n\t\t\t\t})\n\t\t\t\t.catch(function(error) {\n\t\t\t\t  console.log(error)\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t  // Handle Errors here.\n\t\t\t  console.log(error);\n\t\t\t  var errorCode = error.code;\n\t\t\t  var errorMessage = error.message;\n\t\t\t   if(error.code == 'auth/email-already-in-use'){\n\t\t\t   \t $toast('Email Already In Use.');\n\t\t\t   }else{\n\t\t\t   \t $toast('Registration Failed.');\n\t\t\t   }\n\t\t\t});\t\n\t\t}\n\t\t$scope.resetEmailChoice = function(){\n\t\t\t$scope.withEmail = false; \n\t\t\t$scope.chosen = false\n\t\t}\n\n\t\t$scope.signInWithGoogle = function(){\n\t\t/*$scope.googleLoginFinished = true;\n\t\t$scope.passwordChecked = true;\n\t\t$scope.user.email = \"Abdallaroc@gmail.com\";\n\t\treturn;*/\n\n\t\tvar provider = new firebase.auth.GoogleAuthProvider();\n\n\t\tfirebase.auth().signInWithPopup(provider)\n\t\t\t.then(function(data) {\n\t\t\t  console.log(data);\n\t\t\t  // This gives you a Google Access Token. You can use it to access the Google API.\n\t\t\t  var token = data.credential.accessToken;\n\t\t\t  // The signed-in user info.\n\t\t\t  var user = data.user;\n\t\t\t  $scope.$apply(function(){\n\t\t\t  \t$scope.passwordChecked = true;\n\t\t\t  \t$scope.googleLoginFinished = true;\n\t\t\t  \t//To do, store the user name\n\t\t\t  \t$scope.user.name = data.user.displayName;\n\t\t\t  \t$scope.user.uid = data.user.uid;\n\t\t\t  \t$scope.user.photoURL = data.user.photoURL;\n\t\t\t  \t$scope.user.email = data.user.email;\n\t\t\t  })\n\t\t\t  \n\t\t\t  //$scope.registerInDatabase(result.user.uid);\n\t\t\t  // ...\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t  \t$toast('Registration with Google failed');\n\t\t\t  \tconsole.log(error);\n\t\t\t});\n\t\t}\n\n\n\t\t/*\n\t\t\tTo register the user information in the database, this function is called by both normal the registration and the google registeration\n\t\t\t@params uid - string - the uid of the user, given in the callback by either signInWithPopup or signInWithEmailAndPassword firebase authentication methods\n\t\t*/\n\t\t$scope.registerInDatabase = function(uid){\n\t\t\tconsole.group('Registering in database');\n\t\t\tvar updateUserData = {};\n\t\t\t$scope.user.birthDay = $scope.birthDay.getTime();\n\t\t\tconsole.log($scope.user);\n\t\t\tdelete $scope.user['password']; \n\t\t\tdelete $scope.user['passwordRepeat'];\n\n\t\t\tif($scope.user.userType.babySitter === true){\n\t\t\t\tconsole.log(\"user is a babysitter\")\n\t\t\t\tupdateUserData['babysitters/' + uid] = {\n\t\t\t\t\tworkHours: $rootScope.defaultWorkHours,\n\t\t\t\t\tpricing: $rootScope.defaultAgeGroups,\n\t\t\t\t\tphotoURL: $scope.user.photoURL,\n\t\t\t\t\tlocationCity: $scope.user.locationCity,\n\t\t\t\t\tbirthDay: $scope.user.birthDay,\n\t\t\t\t\temail : $scope.user.email,\n\t\t\t\t\tname: $scope.user.name\n\t\t\t\t};\t\n\t\t\t\t$scope.user.pricing = $rootScope.defaultAgeGroups;\n\t\t\t\t$scope.user.workHours = $rootScope.defaultWorkHours\n\t\t\t\t// Counter code\n\t\t\t\t/*$scope.database.child('babysitters/counter').transaction(function(data){\n\t\t\t\t\tconsole.log(data)\n\t\t\t\t\treturn data + 1;\n\t\t\t\t})\n\t\t\t\t.then(function(result){\n\t\t\t\t\tconsole.log(result);\n\t\t\t\t});*/\n\t\t\t\t// Counter code end\n\t\t\t}\n\t\t\tconsole.log(updateUserData);\n\t\t\tupdateUserData['users/' + uid] = $scope.user;\t\t\t\n\n\t\t\tconsole.log(\"update user data is\" + updateUserData);\n\t\t\t$scope.database.update(updateUserData)\n\t\t\t\t.then(function(data){\n\t\t\t\t\tconsole.log('database filled');\n\t\t\t\t\t$toast('Registration successful');\n\t\t\t\t\tif($scope.user.userType.babySitter && $scope.user.userType.parent){\n\t\t\t\t\t\t$state.go('accountPage');\n\t\t\t\t\t}\n\t\t\t\t\tif($scope.user.userType.babySitter){\n\t\t\t\t\t\t$state.go('accountPage');\n\t\t\t\t\t}\n\t\t\t\t\tif($scope.user.userType.parent){\n\t\t\t\t\t\t$state.go('booking');\n\t\t\t\t\t}\n\t\t\t\t\t$scope.$apply(function(){\n\t\t\t\t\t\t$rootScope.incompleteData = false;\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.catch(function(data){\n\t\t\t\t\tconsole.error(data);\n\t\t\t\t\t$toast('Registration failed!');\n\t\t\t\t});\n\t\t\t\tconsole.groupEnd();\n\t\t}\n}]);"],"sourceRoot":"/source/"}